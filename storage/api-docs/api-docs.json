{
    "openapi": "3.0.0",
    "info": {
        "title": "Stoxtech Admin API",
        "version": "1.0.0"
    },
    "paths": {
        "/admin/brands/all": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Get brands list",
                "description": "Returns brands list data.",
                "operationId": "brands.all",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/brands": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Get brands list",
                "description": "Returns brands list data.",
                "operationId": "brands.index",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "Store brand",
                "description": "Returns brand data.",
                "operationId": "brands.store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "slug",
                                    "logo_url"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "logo_url": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/brands/{id}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Show brand",
                "description": "Returns brand data.",
                "operationId": "brands.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Brand"
                ],
                "summary": "Update a brand",
                "operationId": "a2095cdf34924899b60bb49de21eb565",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "logo_url": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brand"
                ],
                "summary": "Delete a brand",
                "operationId": "8ee4bf224461c4894c6e30148a6523a3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Brand"
                ],
                "summary": "Update a brand",
                "operationId": "3335140a0f1ae501a78cbd3506a3d173",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "logo_url": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/call": {
            "get": {
                "tags": [
                    "CommunicationCall"
                ],
                "summary": "Get call list",
                "description": "Returns call list data.",
                "operationId": "5c0476ecdc6ca74026c65902713ff15c",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CommunicationCall"
                ],
                "summary": "Store call",
                "description": "Returns call data.",
                "operationId": "f6c32d952d54484dd125b8dec7a068b8",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "provider_id",
                                    "text"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    },
                                    "provider_id": {
                                        "description": "Communication provider ID",
                                        "type": "integer"
                                    },
                                    "duration": {
                                        "description": "Duration sec.",
                                        "type": "integer"
                                    },
                                    "text": {
                                        "description": "Text",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/call/{id}": {
            "get": {
                "tags": [
                    "CommunicationCall"
                ],
                "summary": "Get call",
                "description": "Returns call data.",
                "operationId": "99b59fd0b92b26031050b56c2c94b38a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Call ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CommunicationCall"
                ],
                "summary": "Update call",
                "description": "Returns call data.",
                "operationId": "69d2cc28bcc8a045ed8c9a3e869a1cc2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Call ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "provider_id",
                                    "text"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    },
                                    "provider_id": {
                                        "description": "Communication provider ID",
                                        "type": "integer"
                                    },
                                    "duration": {
                                        "description": "Duration sec.",
                                        "type": "integer"
                                    },
                                    "text": {
                                        "description": "Text",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CommunicationCall"
                ],
                "summary": "Delete call",
                "operationId": "e9244e7bac57d6cb7e539d87f3f3929b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Call ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "CommunicationCall"
                ],
                "summary": "Update call",
                "description": "Returns call data.",
                "operationId": "a8a1d198f12ac79bbd25fce3a0e886d6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Call ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    },
                                    "provider_id": {
                                        "description": "Communication provider ID",
                                        "type": "integer"
                                    },
                                    "duration": {
                                        "description": "Duration sec.",
                                        "type": "integer"
                                    },
                                    "text": {
                                        "description": "Text",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "Status",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CallResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/chat-message-history": {
            "post": {
                "tags": [
                    "CommunicationChat"
                ],
                "summary": "Chat message history",
                "description": "Returns chat data.",
                "operationId": "ac3142e373caa49b99a6b710eff3c8a2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer_id"
                                ],
                                "properties": {
                                    "customer_id": {
                                        "description": "Customer ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "$ref": "#/components/schemas/ChatMessageCollection"
                                        },
                                        "user": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/chat-message-send": {
            "post": {
                "tags": [
                    "CommunicationChat"
                ],
                "summary": "Store chat message",
                "description": "Returns chat message data.",
                "operationId": "fdc47cb4c886e7a3d7ba49ca486864d6",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer_id",
                                    "message"
                                ],
                                "properties": {
                                    "customer_id": {
                                        "description": "Customer ID",
                                        "type": "integer"
                                    },
                                    "message": {
                                        "description": "Message",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/comments": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get comments list",
                "description": "Returns comments list data.",
                "operationId": "comments.index",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Store comment",
                "description": "Returns comment data.",
                "operationId": "comments.store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "customer_id",
                                    "body",
                                    "logo_url"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "customer_id": {
                                        "type": "integer"
                                    },
                                    "body": {
                                        "type": "string"
                                    },
                                    "position": {
                                        "type": "integer"
                                    },
                                    "attachments": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/comments/{id}": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Show comment",
                "description": "Returns comment data.",
                "operationId": "comments.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update a comment",
                "operationId": "598c9df9f148e5abf799fb70a1d0dec8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "customer_id": {
                                        "type": "integer"
                                    },
                                    "body": {
                                        "type": "string"
                                    },
                                    "position": {
                                        "type": "integer"
                                    },
                                    "attachments": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Delete a comment",
                "operationId": "6181ec07efe75040e2bbf81ceb09dbea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update a comment",
                "operationId": "9cf23cce47618e06622e5134fa1d1a5b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "customer_id": {
                                        "type": "integer"
                                    },
                                    "body": {
                                        "type": "string"
                                    },
                                    "position": {
                                        "type": "integer"
                                    },
                                    "attachments": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/emails": {
            "get": {
                "tags": [
                    "CommunicationEmail"
                ],
                "summary": "Get emails list",
                "description": "Returns emails list data.",
                "operationId": "bae308b51463f6c998210d88bebdb829",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CommunicationEmail"
                ],
                "summary": "Store email",
                "description": "Returns email data.",
                "operationId": "232753a535e83fb263696c5c04e73037",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email_template_id",
                                    "subject",
                                    "body"
                                ],
                                "properties": {
                                    "email_template_id": {
                                        "description": "Email tempalte ID",
                                        "type": "integer"
                                    },
                                    "subject": {
                                        "description": "Email subject",
                                        "type": "string"
                                    },
                                    "body": {
                                        "description": "Email body",
                                        "type": "string"
                                    },
                                    "sent_by_system": {
                                        "type": "boolean"
                                    },
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/emails/{id}": {
            "get": {
                "tags": [
                    "CommunicationEmail"
                ],
                "summary": "Get email",
                "description": "Returns email data.",
                "operationId": "0fd76bb543d80647c8f57860bfcfbd58",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CommunicationEmail"
                ],
                "summary": "Update email",
                "description": "Returns email data.",
                "operationId": "5107341628c8c3636de32ffca14ded2b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email_template_id",
                                    "subject",
                                    "body"
                                ],
                                "properties": {
                                    "email_template_id": {
                                        "description": "Email tempalte ID",
                                        "type": "integer"
                                    },
                                    "subject": {
                                        "description": "Email subject",
                                        "type": "string"
                                    },
                                    "body": {
                                        "description": "Email body",
                                        "type": "string"
                                    },
                                    "sent_by_system": {
                                        "type": "boolean"
                                    },
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CommunicationEmail"
                ],
                "summary": "Delete email",
                "operationId": "610439b42365ac2bc53af8361ebc6f21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "CommunicationEmail"
                ],
                "summary": "Update email",
                "description": "Returns email data.",
                "operationId": "c6fb87368205b9bf125c56fac7fb0b0e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email_template_id": {
                                        "description": "Email tempalte ID",
                                        "type": "integer"
                                    },
                                    "subject": {
                                        "description": "Email subject",
                                        "type": "string"
                                    },
                                    "body": {
                                        "description": "Email body",
                                        "type": "string"
                                    },
                                    "sent_by_system": {
                                        "type": "boolean"
                                    },
                                    "user_id": {
                                        "description": "User ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/email-send-to-customer": {
            "post": {
                "tags": [
                    "CommunicationEmailSend"
                ],
                "summary": "Send email to customer",
                "operationId": "a8d12c5a6c1a0cb6e0228cbe0f727e0b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email_id",
                                    "customer_id"
                                ],
                                "properties": {
                                    "email_id": {
                                        "description": "ID of email",
                                        "type": "integer"
                                    },
                                    "customer_id": {
                                        "description": "ID of customer",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/email-templates": {
            "get": {
                "tags": [
                    "CommunicationEmailTemplates"
                ],
                "summary": "Get email templates list",
                "description": "Returns emails templates list data.",
                "operationId": "7eab9b0e66f06e0769d2025a945bc5af",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTemplatesCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CommunicationEmailTemplates"
                ],
                "summary": "Store email template",
                "description": "Returns email template data.",
                "operationId": "9e590fc894dd51f0c78c0fb6d338f75b",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "body"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Email template name",
                                        "type": "string"
                                    },
                                    "body": {
                                        "description": "Email template body",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTemplatesResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/email-templates/{id}": {
            "get": {
                "tags": [
                    "CommunicationEmailTemplates"
                ],
                "summary": "Get email template",
                "description": "Returns email template data.",
                "operationId": "697b561a46c0b3d5b0b227a5a91d1fe9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTemplatesResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CommunicationEmailTemplates"
                ],
                "summary": "Update email template",
                "description": "Returns email template data.",
                "operationId": "1d11edf2bd59cf01331c2db478736992",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "body"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Email template name",
                                        "type": "string"
                                    },
                                    "body": {
                                        "description": "Email template body",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTemplatesResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CommunicationEmailTemplates"
                ],
                "summary": "Delete email template",
                "operationId": "7a41d567d5cb1e8a3f3e22239c0ef70b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "CommunicationEmailTemplates"
                ],
                "summary": "Update email template",
                "description": "Returns email template data.",
                "operationId": "2508ba660f0c40da80ff1e0072e6ad52",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Email template ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Email template name",
                                        "type": "string"
                                    },
                                    "body": {
                                        "description": "Email template body",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailTemplatesResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/notifications": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get sent notification list",
                "operationId": "dffb05a85aebb456e0f96d70cfb618a9",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/notifications/{id}": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get sent notification",
                "operationId": "20d8d03cd2516a596135bf12b388fd13",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/notifications/send": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "summary": "Send notification to customer",
                "operationId": "fea0ef4868833a0d2d1223db73d4b3dc",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "notifiable_type",
                                    "notifiable_id",
                                    "subject",
                                    "text"
                                ],
                                "properties": {
                                    "notifiable_type": {
                                        "description": "Notification recipient type",
                                        "type": "string",
                                        "enum": [
                                            "customer",
                                            "user"
                                        ]
                                    },
                                    "notifiable_id": {
                                        "description": "Notification recipient ID",
                                        "type": "integer"
                                    },
                                    "subject": {
                                        "description": "Subject of notification",
                                        "type": "string"
                                    },
                                    "text": {
                                        "description": "Text of notification",
                                        "type": "string"
                                    },
                                    "immediately": {
                                        "description": "Should the notification be sent immediately?",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/notification-templates": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get notification template list",
                "operationId": "81ea886946579ee5124464d4d3764b23",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationTemplateCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Communication"
                ],
                "summary": "Store notification template",
                "operationId": "dfe6275a9b927f9446eb325cc5e78c3d",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "subject",
                                    "text"
                                ],
                                "properties": {
                                    "text": {
                                        "description": "Text of notification template",
                                        "type": "string"
                                    },
                                    "subject": {
                                        "description": "Subject of notification template",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationTemplateResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/notification-templates/all": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get communication notification templates list all",
                "operationId": "855a940a4be34557badfcc3b51cf0569",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationTemplateCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/notification-templates/{id}": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get notification template",
                "operationId": "c70fee6d5d4e5562c0f751cf31344237",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationTemplateResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Communication"
                ],
                "summary": "Update notification template",
                "operationId": "b5ef23fe8eaa96f22dd0af16f6430a5d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "subject",
                                    "text"
                                ],
                                "properties": {
                                    "text": {
                                        "description": "Text of notification template",
                                        "type": "string"
                                    },
                                    "subject": {
                                        "description": "Subject of notification template",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationTemplateResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Communication"
                ],
                "summary": "Delete notification template",
                "operationId": "7922946f30b44c2ffd9e2b57ae3f4d99",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationTemplateResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Communication"
                ],
                "summary": "Update notification template",
                "operationId": "041d6f58b9b45ec17f7841aaa631fa3d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "text": {
                                        "description": "Text of notification template",
                                        "type": "string"
                                    },
                                    "subject": {
                                        "description": "Subject of notification template",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationTemplateResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/notification-templates/{id}/send": {
            "post": {
                "tags": [
                    "Communication"
                ],
                "summary": "Send notification template to customer",
                "operationId": "424c26ffbc7b8303d038f56bfcb4056f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer_id"
                                ],
                                "properties": {
                                    "customer_id": {
                                        "description": "Notification recipient ID",
                                        "type": "integer"
                                    },
                                    "params": {
                                        "description": "Object of template params",
                                        "type": "object"
                                    },
                                    "immediately": {
                                        "description": "Should the notification be sent immediately?",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/extensions": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get communication extension list",
                "operationId": "9561ddfb64aa989fcdcba247c4678c7e",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Communication"
                ],
                "summary": "Store communication extension",
                "operationId": "d5d8b3c3f8b8d69dd03acc4aeab4b453",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "user_id",
                                    "provider_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of communication extension",
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/extensions/all": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get communication extensions list all",
                "operationId": "bfd9b188a27671cb33eb9f91c0572798",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/extensions/{id}": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get communication extension",
                "operationId": "b5c95ea0a68124872717de379c44cf42",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Communication"
                ],
                "summary": "Update communication extension",
                "operationId": "56118f5414316a3510cea2ede0e4c9bc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "user_id",
                                    "provider_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of communication extension",
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Communication"
                ],
                "summary": "Delete communication extension",
                "operationId": "9ef6b1e14ea532644bbf1d942b57fb49",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Communication"
                ],
                "summary": "Update communication extension",
                "operationId": "5e013716079f1aa353ab524954763587",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of communication extension",
                                        "type": "string"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "provider_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/extensions/bulk-replace-by-worker": {
            "put": {
                "tags": [
                    "Communication"
                ],
                "summary": "Replace communication extensions by worker",
                "operationId": "0e5269d506818ca3a738db2f712ae854",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "extensions"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "Worker ID",
                                        "type": "integer"
                                    },
                                    "extensions": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "name",
                                                "provider_id"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "description": "Name of communication extension",
                                                    "type": "string"
                                                },
                                                "provider_id": {
                                                    "description": "Communication Provider ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionCollection"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/providers": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get communication provider list",
                "operationId": "6118e7791d864d07408292aed653dc8e",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Communication"
                ],
                "summary": "Store communication provider",
                "operationId": "8bcc16d10ee12d6907c882dcf5cefc9f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of communication provider",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/providers/all": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get communication providers list all",
                "operationId": "56198e4a9f50d9ace583b774b76dc888",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/providers/{id}": {
            "get": {
                "tags": [
                    "Communication"
                ],
                "summary": "Get communication provider",
                "operationId": "fb85dbb4a1f5242726a9795ca8a5dc4b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Communication"
                ],
                "summary": "Update communication provider",
                "operationId": "264a3c44f6502d2752b9b2dbb94e2a82",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of communication provider",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Communication"
                ],
                "summary": "Delete communication provider",
                "operationId": "f1211d2e497516c370916c28f6a010ac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Communication"
                ],
                "summary": "Update communication provider",
                "operationId": "e557940a6b25bd057575cbea4fceffc8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of communication provider",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/configs": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "Get configs",
                "operationId": "2333f94a4855e881041af633d76def2d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Config"
                ],
                "summary": "Add a new config",
                "operationId": "86626df02b9185f66dff9d0971ca44f6",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "config_type_id",
                                    "data_type",
                                    "name",
                                    "value"
                                ],
                                "properties": {
                                    "config_type_id": {
                                        "description": "Config type ID",
                                        "type": "integer"
                                    },
                                    "data_type": {
                                        "description": "Data type",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Config`s name",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Config`s value",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/configs/{id}": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "Get config data",
                "operationId": "1158766cbc221ebdfd591651299902f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Config"
                ],
                "summary": "Update a config",
                "operationId": "3a1b02052d6ca0a4ada89f03f05893a4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "config_type_id",
                                    "data_type",
                                    "name",
                                    "value"
                                ],
                                "properties": {
                                    "config_type_id": {
                                        "description": "Config type ID",
                                        "type": "integer"
                                    },
                                    "data_type": {
                                        "description": "Data type",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Config`s name",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Config`s value",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Config"
                ],
                "summary": "Delete a config",
                "operationId": "d0708a91c71ef4e9b40f588a14338af0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Config"
                ],
                "summary": "Update a config",
                "operationId": "90f09248057230cf7b6e1a7049928c03",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "config_type_id": {
                                        "description": "Config type ID",
                                        "type": "integer"
                                    },
                                    "data_type": {
                                        "description": "Data type",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Config`s name",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Config`s value",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/configs/types": {
            "get": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Get config types",
                "operationId": "67f87329dd5c2305c25982cce4233b48",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigTypeCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Add a new config type",
                "operationId": "f0b5373e99be1030f6ba91690dc30cbf",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Config types`s name",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigTypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/configs/types/{id}": {
            "get": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Get config type data",
                "operationId": "60cbfad03321cb287cedb39490d17e7f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigTypeResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Update a config type",
                "operationId": "232134e689e991251ec452fce456e383",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Config type`s name",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigTypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Delete a config type",
                "operationId": "89979e6080bcc7d6598a3b15aba64bdf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Update a config type",
                "operationId": "6698188f48905dcc54874de79d3006de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Config type`s name",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigTypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/currencies": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Get currencies",
                "operationId": "b26c8d0b49b084ee053b7122f3f5476d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Currency"
                ],
                "summary": "Add a new currency",
                "operationId": "d0f1aa9d3564d11e79d9cad0abade33e",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "iso3",
                                    "symbol"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Currency name"
                                    },
                                    "iso3": {
                                        "description": "Currency iso3"
                                    },
                                    "symbol": {
                                        "description": "Currency symbol"
                                    },
                                    "is_available": {
                                        "description": "Currency is avaialble"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/currencies/{id}": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Get currency data",
                "operationId": "1ce4149024db89c3ee9f878c7255051a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Currency"
                ],
                "summary": "Update a currency",
                "operationId": "a9ea2ab07027374202c9916d2df44ada",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "iso3",
                                    "symbol"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Currency name"
                                    },
                                    "iso3": {
                                        "description": "Currency iso3"
                                    },
                                    "symbol": {
                                        "description": "Currency symbol"
                                    },
                                    "is_available": {
                                        "description": "Currency is avaialble"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Currency"
                ],
                "summary": "Delete a currency",
                "operationId": "78daa105c80c1ae91bbf1ca44e431607",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Currency"
                ],
                "summary": "Update a currency",
                "operationId": "dcd25a6f3e67891f428344a49b41acaf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Currency name"
                                    },
                                    "iso3": {
                                        "description": "Currency iso3"
                                    },
                                    "symbol": {
                                        "description": "Currency symbol"
                                    },
                                    "is_available": {
                                        "description": "Currency is avaialble"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/{id}/reset-password": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Reset password",
                "operationId": "e034fa77747e6febb295eeae32959388",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "token": {
                                        "type": "string"
                                    },
                                    "send_email": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "password": {
                                            "type": "string",
                                            "format": "password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Accepted"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/customers": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get customers list",
                "description": "Returns customers list data.",
                "operationId": "470ff1ac92d4011d996b0bc5dbb5d948",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Store customer",
                "description": "Returns customer data.",
                "operationId": "bad3127c45e2947eef44ae707d7ea0a2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "gender",
                                    "email",
                                    "password",
                                    "phone",
                                    "country_id",
                                    "language_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "1-Male, 2-Female, 3-Other",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password of customer",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "Phone",
                                        "type": "string",
                                        "format": "phone"
                                    },
                                    "country_id": {
                                        "description": "Country id",
                                        "type": "integer"
                                    },
                                    "language_id": {
                                        "description": "Language id",
                                        "type": "integer",
                                        "nullable": "true"
                                    },
                                    "phone2": {
                                        "description": "Second phone",
                                        "type": "string",
                                        "format": "phone",
                                        "nullable": "true"
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "postal_code": {
                                        "description": "Post code",
                                        "type": "integer"
                                    },
                                    "desk_id": {
                                        "description": "Desk id",
                                        "type": "integer",
                                        "nullable": "true"
                                    },
                                    "offer_name": {
                                        "description": "Offer name",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "offer_url": {
                                        "description": "Offer url",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "comment_about_customer": {
                                        "description": "Comment about customer",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "source": {
                                        "description": "Source",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "click_id": {
                                        "description": "Click id",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_1": {
                                        "description": "Free param 1",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_2": {
                                        "description": "Free param 2",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_3": {
                                        "description": "Free param 3",
                                        "type": "string",
                                        "nullable": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/{id}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get customer",
                "description": "Returns customer data.",
                "operationId": "bc9c1d2ce85d47cc898bf5fb8ec03776",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customer"
                ],
                "summary": "Update a customer",
                "operationId": "37826335160a27c47aac2543710caefd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "1-Male, 2-Female, 3-Other",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password of customer",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "Phone",
                                        "type": "string",
                                        "format": "phone"
                                    },
                                    "country_id": {
                                        "description": "Country id",
                                        "type": "integer"
                                    },
                                    "language_id": {
                                        "description": "Language id",
                                        "type": "integer",
                                        "nullable": "true"
                                    },
                                    "phone2": {
                                        "description": "Second phone",
                                        "type": "string",
                                        "format": "phone",
                                        "nullable": "true"
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "postal_code": {
                                        "description": "Post code",
                                        "type": "integer"
                                    },
                                    "desk_id": {
                                        "description": "Desk id",
                                        "type": "integer",
                                        "nullable": "true"
                                    },
                                    "offer_name": {
                                        "description": "Offer name",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "offer_url": {
                                        "description": "Offer url",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "comment_about_customer": {
                                        "description": "Comment about customer",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "source": {
                                        "description": "Source",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "click_id": {
                                        "description": "Click id",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_1": {
                                        "description": "Free param 1",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_2": {
                                        "description": "Free param 2",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_3": {
                                        "description": "Free param 3",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "affiliate_user_id": {
                                        "description": "Affiliate worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_user_id": {
                                        "description": "Conversion worker ID",
                                        "type": "integer"
                                    },
                                    "retention_user_id": {
                                        "description": "Retention user ID",
                                        "type": "integer"
                                    },
                                    "compliance_user_id": {
                                        "description": "Compliance worker ID",
                                        "type": "integer"
                                    },
                                    "support_user_id": {
                                        "description": "Support worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_manager_user_id": {
                                        "description": "Conversion manager worker ID",
                                        "type": "integer"
                                    },
                                    "retention_manager_user_id": {
                                        "description": "Retention manager worker ID",
                                        "type": "integer"
                                    },
                                    "first_conversion_user_id": {
                                        "description": "First conversion worker ID",
                                        "type": "integer"
                                    },
                                    "first_retention_user_id": {
                                        "description": "First retention worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_sale_status_id": {
                                        "description": "Conversion sale status ID",
                                        "type": "integer"
                                    },
                                    "retention_sale_status_id": {
                                        "description": "Retention sale status ID",
                                        "type": "integer"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Permission ID",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Status of customer permission",
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "reason": {
                                                                "description": "Reason of change status",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customer"
                ],
                "summary": "Delete customer",
                "description": "Returns status.",
                "operationId": "2fc603ec41a37b70c90bfe96f8c3a730",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Customer"
                ],
                "summary": "Update a customer",
                "operationId": "2bf40a061e82cc15e45b99b88ef8f291",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "1-Male, 2-Female, 3-Other",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password of customer",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "Phone",
                                        "type": "string",
                                        "format": "phone"
                                    },
                                    "country_id": {
                                        "description": "Country id",
                                        "type": "integer"
                                    },
                                    "language_id": {
                                        "description": "Language id",
                                        "type": "integer",
                                        "nullable": "true"
                                    },
                                    "phone2": {
                                        "description": "Second phone",
                                        "type": "string",
                                        "format": "phone",
                                        "nullable": "true"
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "postal_code": {
                                        "description": "Post code",
                                        "type": "integer"
                                    },
                                    "desk_id": {
                                        "description": "Desk id",
                                        "type": "integer",
                                        "nullable": "true"
                                    },
                                    "offer_name": {
                                        "description": "Offer name",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "offer_url": {
                                        "description": "Offer url",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "comment_about_customer": {
                                        "description": "Comment about customer",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "source": {
                                        "description": "Source",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "click_id": {
                                        "description": "Click id",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_1": {
                                        "description": "Free param 1",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_2": {
                                        "description": "Free param 2",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_3": {
                                        "description": "Free param 3",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "affiliate_user_id": {
                                        "description": "Affiliate worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_user_id": {
                                        "description": "Conversion worker ID",
                                        "type": "integer"
                                    },
                                    "retention_user_id": {
                                        "description": "Retention user ID",
                                        "type": "integer"
                                    },
                                    "compliance_user_id": {
                                        "description": "Compliance worker ID",
                                        "type": "integer"
                                    },
                                    "support_user_id": {
                                        "description": "Support worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_manager_user_id": {
                                        "description": "Conversion manager worker ID",
                                        "type": "integer"
                                    },
                                    "retention_manager_user_id": {
                                        "description": "Retention manager worker ID",
                                        "type": "integer"
                                    },
                                    "first_conversion_user_id": {
                                        "description": "First conversion worker ID",
                                        "type": "integer"
                                    },
                                    "first_retention_user_id": {
                                        "description": "First retention worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_sale_status_id": {
                                        "description": "Conversion sale status ID",
                                        "type": "integer"
                                    },
                                    "retention_sale_status_id": {
                                        "description": "Retention sale status ID",
                                        "type": "integer"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Permission ID",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Status of customer permission",
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "reason": {
                                                                "description": "Reason of change status",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customers/ban": {
            "patch": {
                "tags": [
                    "Customer"
                ],
                "summary": "Ban customers",
                "operationId": "6effcf150a36ae9c712a41d26a555b3c",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customers"
                                ],
                                "properties": {
                                    "customers": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Customer ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customers/unban": {
            "patch": {
                "tags": [
                    "Customer"
                ],
                "summary": "Unban customers",
                "operationId": "d7c85045ee2fb9e28548fc656e13d013",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customers"
                                ],
                                "properties": {
                                    "customers": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Customer ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/export/excel": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Export customers excel data",
                "operationId": "bdce7eab4343326fdb37287840639d5e",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/export/csv": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Export customers csv data",
                "operationId": "0b986c549a736d91b9a00ac9152a073b",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/{id}/impersonate/session": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Steteful login impersonate customer",
                "operationId": "5ccb3b12691930827ac38f177eb6ff75",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success. The session ID is returned in a cookie named `laravel_session`. You need to include this cookie in subsequent requests.",
                        "headers": {
                            "Set-Cookie(example-1)": {
                                "description": "Encrypted session ID cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "laravel_session=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            },
                            "Set-Cookie(example-2)": {
                                "description": "Encrypted recaller cookie. Set if `remember_me=true` was received",
                                "schema": {
                                    "type": "string",
                                    "example": "remember_web-customer_59ba...=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "impersonator",
                                        "target_customer"
                                    ],
                                    "properties": {
                                        "impersonator": {
                                            "$ref": "#/components/schemas/AuthUser"
                                        },
                                        "target_customer": {
                                            "$ref": "#/components/schemas/AuthCustomer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum_frontend": []
                    }
                ]
            }
        },
        "/admin/customers/impersonate/session/logout": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Steteful logout impersonate customer",
                "operationId": "d3c3e984582a2f549febcbb3fd3f5d02",
                "responses": {
                    "204": {
                        "description": "No content. The session ID is returned in a cookie named `laravel_session`. You need to include this cookie in subsequent requests.",
                        "headers": {
                            "Set-Cookie(example-1)": {
                                "description": "Encrypted session ID cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "laravel_session=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            },
                            "Set-Cookie(example-2)": {
                                "description": "Encrypted recaller cookie. Set if `remember_me=true` was received",
                                "schema": {
                                    "type": "string",
                                    "example": "remember_web_59ba...=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            }
                        }
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    }
                },
                "security": [
                    {
                        "sanctum_frontend": []
                    }
                ]
            }
        },
        "/admin/customers/{id}/impersonate/token": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Stateless api login impersonate customer",
                "operationId": "4bfcfce46c894194c03257ae6ead75a1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "impersonator",
                                        "impersonator_token",
                                        "target_customer",
                                        "target_token",
                                        "target_token_expired_at"
                                    ],
                                    "properties": {
                                        "impersonator": {
                                            "$ref": "#/components/schemas/AuthUser"
                                        },
                                        "target_customer": {
                                            "$ref": "#/components/schemas/AuthCustomer"
                                        },
                                        "impersonator_token": {
                                            "type": "string"
                                        },
                                        "target_token": {
                                            "type": "string"
                                        },
                                        "target_token_expired_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2022-12-17 08:44:09"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/import/excel": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Import customers excel data",
                "operationId": "77226928c68906cfcad9d5248e1d5627",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/import/csv": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Import customers csv data",
                "operationId": "a0c7f9d1ffeffefe2fbd980e8951e23f",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customer/auth/login": {
            "post": {
                "tags": [
                    "CustomerAuth"
                ],
                "summary": "Steteful login customer",
                "operationId": "7fe1f71bfa0f6e6fd00be4659f27d583",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "remember_me": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content. The session ID is returned in a cookie named `laravel_session`. You need to include this cookie in subsequent requests.",
                        "headers": {
                            "Set-Cookie(example-1)": {
                                "description": "Encrypted session ID cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "laravel_session=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            },
                            "Set-Cookie(example-2)": {
                                "description": "Encrypted recaller cookie. Set if `remember_me=true` was received",
                                "schema": {
                                    "type": "string",
                                    "example": "remember_web_59ba...=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            }
                        }
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/auth/logout": {
            "post": {
                "tags": [
                    "CustomerAuth"
                ],
                "summary": "Steteful logout customer",
                "operationId": "c1c28154fb717e88886388e65cbd8ff8",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    }
                },
                "security": [
                    {
                        "sanctum_frontend": []
                    }
                ]
            }
        },
        "/customer/auth/me": {
            "get": {
                "tags": [
                    "CustomerAuth"
                ],
                "summary": "Authorized customer data",
                "operationId": "f4818ebdacafae80cffcd44fced9c237",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthCustomerResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    }
                },
                "security": [
                    {
                        "sanctum_frontend": []
                    }
                ]
            }
        },
        "/customer/chat-message-history": {
            "post": {
                "tags": [
                    "CustomerChat"
                ],
                "summary": "Chat message history",
                "description": "Returns chat data.",
                "operationId": "189e582de08897beefded957417afdff",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "$ref": "#/components/schemas/CustomerChatMessageCollection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customer/chat-message-send": {
            "post": {
                "tags": [
                    "CustomerChat"
                ],
                "summary": "Store chat message",
                "description": "Returns chat message data.",
                "operationId": "49264089b9e0927cb04a26d3de111eb4",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer_id",
                                    "message"
                                ],
                                "properties": {
                                    "customer_id": {
                                        "description": "Customer ID",
                                        "type": "integer"
                                    },
                                    "message": {
                                        "description": "Message",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customer/auth/forget-password": {
            "post": {
                "tags": [
                    "CustomerAuth"
                ],
                "summary": "Send Reset Password Notification",
                "operationId": "45c7a15638a68843e31f6142be579a59",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/customer/auth/reset-password": {
            "post": {
                "tags": [
                    "CustomerAuth"
                ],
                "summary": "Reset Password",
                "operationId": "9bed914b9251de8b1db0988edf44599c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/customer/auth/register": {
            "post": {
                "tags": [
                    "CustomerAuth"
                ],
                "summary": "Register customer",
                "description": "Registers a customer",
                "operationId": "55d3fba222b2af21661454d5f5d16907",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "gender",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "country_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "1-Male, 2-Female, 3-Other",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3
                                        ],
                                        "example": "1"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password of customer",
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 6
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 6
                                    },
                                    "phone": {
                                        "description": "Phone",
                                        "type": "string",
                                        "format": "phone",
                                        "pattern": "^\\+(?:\\d){6,14}\\d$"
                                    },
                                    "country_id": {
                                        "description": "Country id",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content. The session ID is returned in a cookie named `laravel_session`. You need to include this cookie in subsequent requests.",
                        "headers": {
                            "Set-Cookie(example-1)": {
                                "description": "Encrypted session ID cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "laravel_session=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            },
                            "Set-Cookie(example-2)": {
                                "description": "Encrypted recaller cookie. Set if `remember_me=true` was received",
                                "schema": {
                                    "type": "string",
                                    "example": "remember_web_59ba...=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            }
                        }
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/token-auth/login": {
            "post": {
                "tags": [
                    "CustomerAuth"
                ],
                "summary": "Stateless api login",
                "operationId": "aa959a26876eb959e87bc5b42f6b1f27",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "remember_me": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "token",
                                        "expired_at"
                                    ],
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "expired_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2022-12-17 08:44:09"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/token-auth/logout": {
            "post": {
                "tags": [
                    "CustomerAuth"
                ],
                "summary": "Steteless api logout",
                "operationId": "17a9ff86764f3717a0e939202e48e99f",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/departments/all": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get departments list all",
                "operationId": "d1dcac3a9950e9a1fda283c55e2ea654",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/departments": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get departments list",
                "description": "Returns departments list data.",
                "operationId": "departments.index",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Department"
                ],
                "summary": "Store department",
                "description": "Returns department data.",
                "operationId": "departments.store",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": true,
                        "example": "Name"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title",
                        "required": true,
                        "example": "Title"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active",
                        "required": false,
                        "example": 1
                    },
                    {
                        "name": "is_default",
                        "in": "query",
                        "description": "Is default",
                        "required": false,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/departments/{id}": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get department",
                "description": "Returns department data.",
                "operationId": "departments.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Department"
                ],
                "summary": "Delete department",
                "description": "Returns status.",
                "operationId": "departments.delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Department"
                ],
                "summary": "Update department",
                "description": "Returns department data.",
                "operationId": "departments.update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department id",
                        "required": true,
                        "example": 1
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": false,
                        "example": "Name"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title",
                        "required": false,
                        "example": "Title"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active",
                        "required": false,
                        "example": 1
                    },
                    {
                        "name": "is_default",
                        "in": "query",
                        "description": "Is default",
                        "required": false,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/departments/workers": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get departments workers",
                "operationId": "78929ce15246da20fa37a8c184f04bef",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/desks/all": {
            "get": {
                "tags": [
                    "Desk"
                ],
                "summary": "Get desks list all",
                "operationId": "024e547a48f0e57071ec9f1de2c29627",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeskCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/desks": {
            "get": {
                "tags": [
                    "Desk"
                ],
                "summary": "Get desks list",
                "operationId": "b3122ec26a1a7bd1bd808c4274a4af8c",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeskCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Desk"
                ],
                "summary": "Store desk",
                "operationId": "9fa9453723d684e78d68b0feec16b324",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of desk",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of desk",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Activity of desk",
                                        "type": "boolean"
                                    },
                                    "parent_id": {
                                        "description": "Parent desk id",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeskResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/desks/{id}": {
            "get": {
                "tags": [
                    "Desk"
                ],
                "summary": "Get desk",
                "operationId": "7d56353bfe18df54cdcc485b4b3f45af",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeskResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Desk"
                ],
                "summary": "Update desk",
                "operationId": "66de62051bb46ac798c7243a00d668e0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of desk",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of desk",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Activity of desk",
                                        "type": "boolean"
                                    },
                                    "parent_id": {
                                        "description": "Parent desk id",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeskResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Desk"
                ],
                "summary": "Delete desk",
                "operationId": "4509e557b9b1c53faab3b8c0b2361f61",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeskResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Desk"
                ],
                "summary": "Update desk",
                "operationId": "cc044d6b0245d80c385614a08bafc3ec",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of desk",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of desk",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Activity of desk",
                                        "type": "boolean"
                                    },
                                    "parent_id": {
                                        "description": "Parent desk id",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeskResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/countries/all": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get countries list all",
                "operationId": "289f70da387a5c497281d2ec9d9fc4e3",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/countries": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get countries list",
                "description": "Returns countries list data.",
                "operationId": "countries.index",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Store country",
                "description": "Returns country data.",
                "operationId": "countries.store",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": true,
                        "example": "Russia"
                    },
                    {
                        "name": "iso2",
                        "in": "query",
                        "description": "ISO2",
                        "required": true,
                        "example": "RU"
                    },
                    {
                        "name": "iso3",
                        "in": "query",
                        "description": "ISO3",
                        "required": true,
                        "example": "RUS"
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency",
                        "required": true,
                        "example": "RUB"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/countries/{id}": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get country",
                "description": "Returns country data.",
                "operationId": "countries.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Country"
                ],
                "summary": "Delete country",
                "description": "Returns status.",
                "operationId": "countries.delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Country"
                ],
                "summary": "Update country",
                "description": "Returns country data.",
                "operationId": "countries.update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "example": 1
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": false,
                        "example": "Russia"
                    },
                    {
                        "name": "iso2",
                        "in": "query",
                        "description": "ISO2",
                        "required": false,
                        "example": "RU"
                    },
                    {
                        "name": "iso3",
                        "in": "query",
                        "description": "ISO3",
                        "required": false,
                        "example": "RUS"
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency",
                        "required": false,
                        "example": "RUB"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/languages/all": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get languages list all",
                "operationId": "99a764f381cbac0bb6fe06297069d703",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/languages": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get languages list",
                "description": "Returns languages list data.",
                "operationId": "languages.index",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Language"
                ],
                "summary": "Store language",
                "description": "Returns language data.",
                "operationId": "languages.store",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": true,
                        "example": "Russia"
                    },
                    {
                        "name": "iso2",
                        "in": "query",
                        "description": "ISO2",
                        "required": true,
                        "example": "RU"
                    },
                    {
                        "name": "iso3",
                        "in": "query",
                        "description": "ISO3",
                        "required": true,
                        "example": "RUS"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/languages/{id}": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get language",
                "description": "Returns language data.",
                "operationId": "languages.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Language id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Language"
                ],
                "summary": "Delete language",
                "description": "Returns status.",
                "operationId": "languages.delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Language id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Language"
                ],
                "summary": "Update language",
                "description": "Returns language data.",
                "operationId": "languages.update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Language id",
                        "required": true,
                        "example": 1
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": false,
                        "example": "Russia"
                    },
                    {
                        "name": "iso2",
                        "in": "query",
                        "description": "ISO2",
                        "required": false,
                        "example": "RU"
                    },
                    {
                        "name": "iso3",
                        "in": "query",
                        "description": "ISO3",
                        "required": false,
                        "example": "RUS"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/columns": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get columns",
                "operationId": "9642d39237e45720c4716ebb2b63db2d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ColumnCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Add a new сolumn",
                "operationId": "d4ad24f15b75610c397f521feeb4ccbf",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of column"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ColumnResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/columns/{id}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get column data",
                "operationId": "225fb38157f0e296bf25e56bb1c91ff1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Column ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ColumnResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update a сolumn",
                "operationId": "92a488be8b06a62ba1aec55e91e78064",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Column ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of column"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ColumnResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Permission"
                ],
                "summary": "Delete a column",
                "operationId": "d4452f7f17a82d92a0284485ecc5a98a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Column ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update a column",
                "operationId": "578b679bde11f0f14a698721253ddad3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Column ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of column"
                                    },
                                    "guard_name": {
                                        "description": "Guard name",
                                        "type": "string"
                                    },
                                    "key": {
                                        "description": "Key",
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "description": "Array of permission`s ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ColumnResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/{id}/columns": {
            "put": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update permission columns",
                "operationId": "9361892c39a0ae8b8da9be21536ca618",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "columns"
                                ],
                                "properties": {
                                    "columns": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Column id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get permissions",
                "operationId": "a8738d83e0262ce8916d4361d9ca1b5d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/all": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get all permissions",
                "operationId": "f6da82ef435f070a7fd81137268322ef",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/{id}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get permission data",
                "operationId": "7f440d2efa45f5f5b2ff77a3cdee3d26",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/count": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get permissions count",
                "operationId": "d522da5d9c285285b9c0f5c226b40713",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/roles/all": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get roles list all",
                "operationId": "a1dbed4ce62607eaa650582f968a5026",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/roles": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get roles",
                "operationId": "d134eb6a4ba203fb7448af7ab321c376",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Add a new role",
                "operationId": "b5335ad634fc1f4475b8e43e43dba0e3",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "guard_name",
                                    "key",
                                    "permissions"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of role"
                                    },
                                    "guard_name": {
                                        "description": "Guard name",
                                        "type": "string"
                                    },
                                    "key": {
                                        "description": "Key",
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "description": "Array of permission`s ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/roles/{id}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get role data",
                "operationId": "5476a17a1a8e92e4ae380afa959f0d20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update a role",
                "operationId": "2c5c949404129653d34fb02ee487248f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "guard_name",
                                    "key",
                                    "permissions"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of role"
                                    },
                                    "guard_name": {
                                        "description": "Guard name",
                                        "type": "string"
                                    },
                                    "key": {
                                        "description": "Key",
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "description": "Array of permission`s ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete a role",
                "operationId": "a83de148463c08c56e7c3ba05f86a5c2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Role"
                ],
                "summary": "Update a role",
                "operationId": "8b8fc1ffafc15a4acbdf89044b13b1d7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of role"
                                    },
                                    "guard_name": {
                                        "description": "Guard name",
                                        "type": "string"
                                    },
                                    "key": {
                                        "description": "Key",
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "description": "Array of permission`s ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/sale-statuses": {
            "get": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Get salestatus list",
                "description": "Returns salestatus list data.",
                "operationId": "ffa6789ab6fe18c80e47fe5092533559",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Store salestatus",
                "description": "Returns salestatus data.",
                "operationId": "84a86fd9a91b69f0a1e79ab80b91fb49",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "color"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of sale status",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of sale status",
                                        "type": "string"
                                    },
                                    "color": {
                                        "description": "RGB HEX",
                                        "type": "string",
                                        "example": "#e1e1e1"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/sale-statuses/{id}": {
            "get": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Get salestatus",
                "description": "Returns salestatus data.",
                "operationId": "512b5fa2cae02ebfb639715f3319fc72",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sale statuses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Update salestatus",
                "description": "Returns salestatus data.",
                "operationId": "83b3eb51afba342ce220ad299f7eaa6b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sale statuses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "color"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of sale status",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of sale status",
                                        "type": "string"
                                    },
                                    "color": {
                                        "description": "RGB HEX",
                                        "type": "string",
                                        "example": "#e1e1e1"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Delete salestatus",
                "description": "Returns status.",
                "operationId": "9485c480b3bf562d78b5b9c9c4db898a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sale statuses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Update salestatus",
                "description": "Returns salestatus data.",
                "operationId": "44e9fcaa7348acd0a8ab081721d4a704",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sale statuses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of sale status",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of sale status",
                                        "type": "string"
                                    },
                                    "color": {
                                        "description": "RGB HEX",
                                        "type": "string",
                                        "example": "#e1e1e1"
                                    },
                                    "department_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/tokens/all": {
            "get": {
                "tags": [
                    "Token"
                ],
                "summary": "Get tokens list all",
                "operationId": "8b5b897f82404469ddfc72c1e98899d9",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transactions/export/excel": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Export transactions excel data",
                "operationId": "02dd8a427d15441ecaa7a07c1861bc00",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transactions/export/csv": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Export transactions csv data",
                "operationId": "d5ee05f8e602eb2cd1afe258ade7aaab",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transaction-statuses": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction statuses",
                "operationId": "d69a75dee1859682c06c3605fd003684",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionStatusCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Add a new transaction status",
                "operationId": "311f300a7661becda9767d7dba2e1d46",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Transaction status name"
                                    },
                                    "title": {
                                        "description": "Transaction status title",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Transaction status is active",
                                        "type": "boolean"
                                    },
                                    "is_valid": {
                                        "description": "Transaction status is valid",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionStatusResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transaction-statuses/{id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction status data",
                "operationId": "36c8f538e5e58982a9657a79f3e2a52c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionStatusResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a transaction status",
                "operationId": "45d75a9cbc65610f6cd4e909a2fe5908",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Transaction status name",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Transaction status title",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Transaction status is active",
                                        "type": "boolean"
                                    },
                                    "is_valid": {
                                        "description": "Transaction status is valid",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionStatusResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete a transaction status",
                "operationId": "c223f2428869f925bc58d8712e0f3d3d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a transaction status",
                "operationId": "c9de304db60b506011205b401feafec6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Transaction status name",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Transaction status title",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Transaction status is active",
                                        "type": "boolean"
                                    },
                                    "is_valid": {
                                        "description": "Transaction status is valid",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionStatusResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transaction-methods": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction method",
                "operationId": "3a435a4a359e462d6f731fda09d0655d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsMethodCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Add a new transaction method",
                "operationId": "bdd79e62126950584e8b4d4a21e440f1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Transaction method name"
                                    },
                                    "title": {
                                        "description": "Transaction method title",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Transaction method is active",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsMethodResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transaction-methods/{id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction method data",
                "operationId": "06d710876b258317f70efc2541f9fd9b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction method ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsMethodResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a transaction method",
                "operationId": "646761694ef9f0f8b433e01c3b84e87e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction method ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Transaction method name"
                                    },
                                    "title": {
                                        "description": "Transaction method title",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Transaction method is active",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsMethodResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete a transaction method",
                "operationId": "4d8ade5581000742ffebd6f15d84c27c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction method ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a transaction method",
                "operationId": "8cdb1b6517077bbe5a4606b0b172d833",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction method ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Transaction method name"
                                    },
                                    "title": {
                                        "description": "Transaction method title",
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "description": "Transaction method is active",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsMethodResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transaction-mt5-types": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction Mt5 type",
                "operationId": "14f557e38422d093ee42323915003d13",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsMt5TypeCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Add a new transaction Mt5 type",
                "operationId": "c18895be7d7f9bcb8c9f0364036018cd",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "mt5_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Transaction Mt5 type name"
                                    },
                                    "title": {
                                        "description": "Transaction Mt5 type title",
                                        "type": "string"
                                    },
                                    "mt5_id": {
                                        "description": "Transaction Mt5 type mt5_id",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsMt5TypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transaction-mt5-types/{id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction Mt5 type data",
                "operationId": "48b3b9fcd95a0cefaf3c34db800c8818",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction Mt5 type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsMt5TypeResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a transaction Mt5 type",
                "operationId": "137682d1dd4fa27c40684db9b1e652ac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction Mt5 type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "mt5_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Transaction Mt5 type name"
                                    },
                                    "title": {
                                        "description": "Transaction Mt5 type title",
                                        "type": "string"
                                    },
                                    "mt5_id": {
                                        "description": "Transaction Mt5 type mt5_id",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsMt5TypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete a transaction Mt5 type",
                "operationId": "b5f212003b7162f089cf7b2f6a15990d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction Mt5 type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a transaction Mt5 type",
                "operationId": "8431a376e8fea82347acf0aca343a467",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction Mt5 type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Transaction Mt5 type name"
                                    },
                                    "title": {
                                        "description": "Transaction Mt5 type title",
                                        "type": "string"
                                    },
                                    "mt5_id": {
                                        "description": "Transaction Mt5 type mt5_id",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsMt5TypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transaction-wallets": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get wallet",
                "operationId": "4c0bda3d3c54f60790b4d88d88bae87e",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsWalletCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Add a new wallet",
                "operationId": "6521ced0b951f5d55b9e33165928c21d",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "mt5_id",
                                    "currency_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Wallet name"
                                    },
                                    "title": {
                                        "description": "Wallet title",
                                        "type": "string"
                                    },
                                    "mt5_id": {
                                        "description": "Wallet mt5_id",
                                        "type": "string"
                                    },
                                    "currency_id": {
                                        "description": "Wallet currency_id",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsWalletResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transaction-wallets/{id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get wallet data",
                "operationId": "44923f7737b1750659a2f570e1c6b6c8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Wallet ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsWalletResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a wallet",
                "operationId": "49f217bf6d44e43ecdd30f9d91e005d9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Wallet ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "mt5_id",
                                    "currency_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Wallet name"
                                    },
                                    "title": {
                                        "description": "Wallet title",
                                        "type": "string"
                                    },
                                    "mt5_id": {
                                        "description": "Wallet mt5_id",
                                        "type": "string"
                                    },
                                    "currency_id": {
                                        "description": "Wallet currency_id",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsWalletResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete a wallet",
                "operationId": "8d790d5b7ff87d680c4791c06b111689",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Wallet ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a wallet",
                "operationId": "818f43d8dec8a14bbb6b8eef8fb95f2a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Wallet ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Wallet name"
                                    },
                                    "title": {
                                        "description": "Wallet title",
                                        "type": "string"
                                    },
                                    "mt5_id": {
                                        "description": "Wallet mt5_id",
                                        "type": "string"
                                    },
                                    "currency_id": {
                                        "description": "Wallet currency_id",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionsWalletResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transactions": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transactions",
                "operationId": "9ebb847e0c39ef9bbacba507bf3ad9f8",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Add a new transaction",
                "operationId": "4ca3dddcac68f9c25ce8d7f8bda4e768",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transactions/{id}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction data",
                "operationId": "7b7d7b560a02c38e1549269ceef9b6c6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a transaction",
                "operationId": "cedebb639eb07de17a7846028b5fe8d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "method_id",
                                    "is_test",
                                    "worker_id",
                                    "status_id",
                                    "external_id"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Amount of transaction",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "method_id": {
                                        "description": "Method ID",
                                        "type": "integer"
                                    },
                                    "is_test": {
                                        "description": "Is test",
                                        "type": "boolean"
                                    },
                                    "worker_id": {
                                        "description": "Worker ID",
                                        "type": "integer"
                                    },
                                    "status_id": {
                                        "description": "Status ID",
                                        "type": "integer"
                                    },
                                    "external_id": {
                                        "description": "External ID",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Update a transaction",
                "operationId": "3f32980bf01ed2352f86c078580adbb0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Transaction ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "description": "Amount of transaction",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "method_id": {
                                        "description": "Method ID",
                                        "type": "integer"
                                    },
                                    "is_test": {
                                        "description": "Is test",
                                        "type": "boolean"
                                    },
                                    "worker_id": {
                                        "description": "Worker ID",
                                        "type": "integer"
                                    },
                                    "status_id": {
                                        "description": "Status ID",
                                        "type": "integer"
                                    },
                                    "external_id": {
                                        "description": "External ID",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/transactions/update/batch": {
            "patch": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Batch transaction update",
                "operationId": "58bebb6fb714916f8bc5ff5b1eb3f6ab",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "transactions"
                                ],
                                "properties": {
                                    "transactions": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Transaction ID",
                                                    "type": "integer"
                                                },
                                                "status_id": {
                                                    "description": "Status ID",
                                                    "type": "integer"
                                                },
                                                "worker_id": {
                                                    "description": "Worker ID",
                                                    "type": "integer"
                                                },
                                                "is_test": {
                                                    "description": "Is test",
                                                    "type": "boolean"
                                                },
                                                "method_id": {
                                                    "description": "Method ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Steteful login worker",
                "operationId": "0000595c89318605a085f8278dfb593f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "description": "Username or Email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "remember_me": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content. The session ID is returned in a cookie named `laravel_session`. You need to include this cookie in subsequent requests.",
                        "headers": {
                            "Set-Cookie(example-1)": {
                                "description": "Encrypted session ID cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "laravel_session=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            },
                            "Set-Cookie(example-2)": {
                                "description": "Encrypted recaller cookie. Set if `remember_me=true` was received",
                                "schema": {
                                    "type": "string",
                                    "example": "remember_web_59ba...=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            }
                        }
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Steteful logout worker",
                "operationId": "623a31a6ecbba78e4ee88edad388b138",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    }
                },
                "security": [
                    {
                        "sanctum_frontend": []
                    }
                ]
            }
        },
        "/admin/auth/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authorized worker data",
                "operationId": "3b211723942663a3046347a8b9f9004a",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthUserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    }
                },
                "security": [
                    {
                        "sanctum_frontend": []
                    }
                ]
            }
        },
        "/admin/workers/{id}/brand": {
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker brands",
                "operationId": "f925d8c3fc4affbee411ed10cf59b255",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brands"
                                ],
                                "properties": {
                                    "brands": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Brand id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{id}/country": {
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker countries",
                "operationId": "de69e9dad98cbd42520160619ad9ec93",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "countries"
                                ],
                                "properties": {
                                    "countries": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Country id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{id}/department": {
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker departments",
                "operationId": "331336218a2f76ceb0720f5e6cbbcca6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "departments"
                                ],
                                "properties": {
                                    "departments": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Department id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{id}/desk": {
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker desks",
                "operationId": "3c369b7abc43a3752e2f6faa4b65cc93",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "desks"
                                ],
                                "properties": {
                                    "desks": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Desk id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{workerId}/display-options/{displayOptionId}": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "Show display option.",
                "operationId": "a2e3760389d4bccca058db9a498b0f5f",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "displayOptionId",
                        "in": "path",
                        "description": "Display option id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayOptionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update a worker`s display option",
                "operationId": "51d02c2d6ad4c4ec2c46906af4903f3d",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "displayOptionId",
                        "in": "path",
                        "description": "Display option id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "model_id",
                                    "name"
                                ],
                                "properties": {
                                    "model_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "columns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayOptionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Worker"
                ],
                "summary": "Delete a worker`s display option",
                "operationId": "f9b2b9345ed6e7406acaeaca2b488eaf",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "displayOptionId",
                        "in": "path",
                        "description": "Display option id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update a worker",
                "operationId": "a68dabe45a22274481c43a5afcb9c937",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "displayOptionId",
                        "in": "path",
                        "description": "Display option id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "model_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "columns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayOptionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{workerId}/display-options": {
            "post": {
                "tags": [
                    "Worker"
                ],
                "summary": "Add a new worker`s display option",
                "operationId": "3cc600033e060b1e0944ae3bdb4c4997",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "model_id",
                                    "name",
                                    "columns"
                                ],
                                "properties": {
                                    "model_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "columns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayOptionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{id}/impersonate/token": {
            "post": {
                "tags": [
                    "Worker"
                ],
                "summary": "Stateless api login impersonate worker",
                "operationId": "3dc1fdb8e51292a16b7e6aaaeaedb130",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "impersonator",
                                        "impersonator_token",
                                        "target_worker",
                                        "target_token",
                                        "target_token_expired_at"
                                    ],
                                    "properties": {
                                        "impersonator": {
                                            "$ref": "#/components/schemas/AuthUser"
                                        },
                                        "target_worker": {
                                            "$ref": "#/components/schemas/AuthUser"
                                        },
                                        "impersonator_token": {
                                            "type": "string"
                                        },
                                        "target_token": {
                                            "type": "string"
                                        },
                                        "target_token_expired_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2022-12-17 08:44:09"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{id}/language": {
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker languages",
                "operationId": "d1983466c95ec4772f21be6e61c69520",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "languages"
                                ],
                                "properties": {
                                    "languages": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Language id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/auth/forget-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send Reset Password Notification",
                "operationId": "6588ee88df2cbd2ec882d00b8ec24eb2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/auth/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset Password",
                "operationId": "f90e47572b7c88223f3c144e7ca73026",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/workers/{workerId}/presets/{presetId}": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "Show preset.",
                "operationId": "3aa5216ab63cae9783f0f9b704930956",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "presetId",
                        "in": "path",
                        "description": "Display option id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PresetResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update a worker`s preset",
                "operationId": "f704c23fd1c7fbfabd0f33fbdf1ac483",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "presetId",
                        "in": "path",
                        "description": "Preset id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "model_id",
                                    "name"
                                ],
                                "properties": {
                                    "model_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "columns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PresetResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Worker"
                ],
                "summary": "Delete a worker`s preset",
                "operationId": "553850d13099b32c6da6d8b0978eecd4",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "presetId",
                        "in": "path",
                        "description": "Preset id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update a worker",
                "operationId": "49184bbf31c9c063d75703bd3dddc251",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "presetId",
                        "in": "path",
                        "description": "Display option id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "model_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "columns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PresetResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{workerId}/presets": {
            "post": {
                "tags": [
                    "Worker"
                ],
                "summary": "Add a new worker`s preset",
                "operationId": "15c0381d157b408cbb0081d33d6b4772",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "model_id",
                                    "name",
                                    "columns"
                                ],
                                "properties": {
                                    "model_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "columns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PresetResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/auth/callback/{provider}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "OAuth provider callback endpoint",
                "operationId": "7e90017f737dac29a1d287d87bc7cc15",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "OAuth provider name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "google"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects to `redirect_url` with cookies (and possibly validation or application errors in query params)",
                        "headers": {
                            "Set-Cookie": {
                                "schema": {
                                    "type": "string",
                                    "example": "laravel_session=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            },
                            "Location": {
                                "schema": {
                                    "type": "string",
                                    "example": "{redirect_url}?code=422&message%5Bmessage%5D=The%20provided%20credentials%20are%20incorrect.&message%5Berrors%5D%5Bemail%5D%5B0%5D=The%20provided%20credentials%20are%20incorrect"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/auth/login/{provider}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "OAuth provider login endpoint",
                "operationId": "d7faf6de8b626da990c15a2ab1615605",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "OAuth provider name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "google"
                        }
                    },
                    {
                        "name": "remember_me",
                        "in": "query",
                        "description": "Remember user",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                "1",
                                "0"
                            ]
                        }
                    },
                    {
                        "name": "redirect_url",
                        "in": "query",
                        "description": "URL where the user will be redirected after authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects to auth page"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/workers": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "Get workers",
                "operationId": "ccb21f208e5fbe9dbd47c9d39829e205",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Worker"
                ],
                "summary": "Add a new worker",
                "operationId": "da31777849413b599e5ffe4bc77f9db2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "first_name",
                                    "last_name",
                                    "password",
                                    "roles",
                                    "desks",
                                    "languages",
                                    "countries"
                                ],
                                "properties": {
                                    "username": {
                                        "description": "Worker username"
                                    },
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "is_active": {
                                        "description": "Worker activity flag",
                                        "type": "boolean"
                                    },
                                    "target": {
                                        "description": "Target amount for the worker",
                                        "type": "integer"
                                    },
                                    "parent_id": {
                                        "description": "Parent worker ID",
                                        "type": "integer"
                                    },
                                    "roles": {
                                        "description": "Array of roles ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "desks": {
                                        "description": "Array of roles desks",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "languages": {
                                        "description": "Array of languages ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "countries": {
                                        "description": "Array of countries ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "affiliate_id": {
                                        "description": "Affiliate worker ID",
                                        "type": "integer"
                                    },
                                    "show_on_scoreboards": {
                                        "description": "Show on scoreboards",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{id}": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "Get worker data",
                "operationId": "359da0eae0f04a73c55066cd67112f82",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update a worker",
                "operationId": "278a2b82092a5514efe40bafeba5f9f1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "first_name",
                                    "last_name",
                                    "password",
                                    "roles"
                                ],
                                "properties": {
                                    "username": {
                                        "description": "Worker username",
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "is_active": {
                                        "description": "Worker activity flag",
                                        "type": "boolean"
                                    },
                                    "target": {
                                        "description": "Target amount for the worker",
                                        "type": "integer"
                                    },
                                    "parent_id": {
                                        "description": "Parent worker ID",
                                        "type": "integer"
                                    },
                                    "roles": {
                                        "description": "Array of roles ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "change_password": {
                                        "description": "Must be set to true if the password is changed.",
                                        "type": "boolean"
                                    },
                                    "affiliate_id": {
                                        "description": "Affiliate worker ID",
                                        "type": "integer"
                                    },
                                    "show_on_scoreboards": {
                                        "description": "Show on scoreboards",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Worker"
                ],
                "summary": "Delete a worker",
                "operationId": "cdf83c0b6567f662b50ddc5a811c8d91",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update a worker",
                "operationId": "29a2d3523eea86f75d65ccc3e599bc8e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "description": "Worker username",
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "is_active": {
                                        "description": "Worker activity flag",
                                        "type": "boolean"
                                    },
                                    "target": {
                                        "description": "Target amount for the worker",
                                        "type": "integer"
                                    },
                                    "parent_id": {
                                        "description": "Parent worker ID",
                                        "type": "integer"
                                    },
                                    "roles": {
                                        "description": "Array of roles ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "change_password": {
                                        "description": "Must be set to true if the password is changed.",
                                        "type": "boolean"
                                    },
                                    "affiliate_id": {
                                        "description": "Affiliate worker ID",
                                        "type": "integer"
                                    },
                                    "show_on_scoreboards": {
                                        "description": "Show on scoreboards",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/ban": {
            "patch": {
                "tags": [
                    "Worker"
                ],
                "summary": "Ban workers",
                "operationId": "b572b98a9b3cebdcc4224313a9cc9082",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "users"
                                ],
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Worker ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/unban": {
            "patch": {
                "tags": [
                    "Worker"
                ],
                "summary": "Unban workers",
                "operationId": "b9f6246813a23ac224d11adb3164484a",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "users"
                                ],
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Worker ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/batch": {
            "patch": {
                "tags": [
                    "Worker"
                ],
                "summary": "Batch worker update",
                "operationId": "48faec29a28ad96a63087701cc1b49c1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "users"
                                ],
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Worker ID",
                                                    "type": "integer"
                                                },
                                                "username": {
                                                    "description": "Worker username",
                                                    "type": "string"
                                                },
                                                "first_name": {
                                                    "description": "First name",
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "description": "Last name",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "description": "Email",
                                                    "type": "string",
                                                    "format": "email"
                                                },
                                                "password": {
                                                    "description": "Password",
                                                    "type": "string",
                                                    "format": "password"
                                                },
                                                "is_active": {
                                                    "description": "Worker activity flag",
                                                    "type": "boolean"
                                                },
                                                "target": {
                                                    "description": "Target amount for the worker",
                                                    "type": "integer"
                                                },
                                                "parent_id": {
                                                    "description": "Parent worker ID",
                                                    "type": "integer"
                                                },
                                                "roles": {
                                                    "description": "Array of roles ID",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "change_password": {
                                                    "description": "Must be set to true if the password is changed.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/export/excel": {
            "post": {
                "tags": [
                    "Worker"
                ],
                "summary": "Export workers excel data",
                "operationId": "6e96d94984604c52293a1619ec2c0861",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/export/csv": {
            "post": {
                "tags": [
                    "Worker"
                ],
                "summary": "Export workers csv data",
                "operationId": "a021bf30089ce7423dfa9435cd30c92c",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/token-auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Stateless api login",
                "operationId": "b40fd09c2695f363a2b940db1faaed2f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "description": "Username or Email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "remember_me": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "token",
                                        "expired_at"
                                    ],
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "expired_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2022-12-17 08:44:09"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/token-auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Steteless api logout",
                "operationId": "ef4e90a1af0c82dae472f057e366226e",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/token/create": {
            "post": {
                "tags": [
                    "Token"
                ],
                "summary": "Create new token",
                "operationId": "616eb681a84071fa303f4308e31b07c6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token_name"
                                ],
                                "properties": {
                                    "token_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "token"
                                    ],
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/token/delete": {
            "delete": {
                "tags": [
                    "Token"
                ],
                "summary": "Delete token",
                "operationId": "e9ad65032766a13ba65cf0371a2adcf8",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Brand": {
                "title": "Brand",
                "description": "Brand model",
                "required": [
                    "id",
                    "name",
                    "title",
                    "slug",
                    "logo_url",
                    "is_active",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "properties": {
                    "id": {
                        "description": "Brand.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Brand name"
                    },
                    "title": {
                        "type": "string",
                        "example": "Brand title"
                    },
                    "slug": {
                        "type": "string",
                        "example": "brand-slug"
                    },
                    "logo_url": {
                        "type": "string",
                        "example": "/logo-url"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "workers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Worker"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Brand"
                }
            },
            "BrandCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Brand"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "BrandResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Brand"
                    }
                },
                "type": "object"
            },
            "Call": {
                "title": "Call",
                "description": "Call model",
                "required": [
                    "email_template_id",
                    "subject",
                    "body"
                ],
                "properties": {
                    "user_id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "provider_id": {
                        "description": "Communication provider ID",
                        "type": "integer"
                    },
                    "duration": {
                        "description": "Duration sec.",
                        "type": "integer"
                    },
                    "text": {
                        "description": "Text",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status",
                        "type": "integer"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Call"
                }
            },
            "CallCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Call"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CallResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Call"
                    }
                },
                "type": "object"
            },
            "ChatCustomerMessage": {
                "title": "ChatCustomerMessage",
                "description": "ChatMessage model",
                "properties": {
                    "id": {
                        "description": "Customer ID",
                        "type": "integer"
                    },
                    "first_name": {
                        "description": "Customer first name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Customer last name",
                        "type": "string"
                    },
                    "gender": {
                        "description": "Customer gender",
                        "type": "integer"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChatMessage"
                }
            },
            "ChatCustomerMessageCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChatCustomerMessage"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "ChatCustomerMessageResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ChatCustomerMessage"
                    }
                },
                "type": "object"
            },
            "ChatMessage": {
                "title": "ChatMessage",
                "description": "ChatMessage model",
                "required": [
                    "id",
                    "user_id",
                    "customer_id",
                    "message",
                    "initiator_id",
                    "initiator_type",
                    "read"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string",
                        "example": "Message"
                    },
                    "initiator_id": {
                        "type": "integer",
                        "example": "Message owner ID"
                    },
                    "initiator_type": {
                        "type": "string",
                        "example": "Message owner Type"
                    },
                    "read": {
                        "type": "integer",
                        "example": "Read status 0 or 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "user": {
                        "$ref": "#/components/schemas/ChatUserMessage"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/ChatCustomerMessage"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChatMessage"
                }
            },
            "ChatMessageCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChatMessage"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "ChatMessageResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ChatMessage"
                    }
                },
                "type": "object"
            },
            "ChatUserMessage": {
                "title": "ChatUserMessage",
                "description": "ChatMessage model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "username": {
                        "description": "Username",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "User first name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "User last name",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChatMessage"
                }
            },
            "ChatUserMessageCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChatUserMessage"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "ChatUserMessageResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ChatUserMessage"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "title": "Comment",
                "description": "Comment model",
                "required": [
                    "id",
                    "body",
                    "user_id",
                    "customer_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Comment.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "customer_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "body": {
                        "type": "string",
                        "example": "Body text"
                    },
                    "position": {
                        "type": "integer",
                        "example": "1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/Worker"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/Customer"
                    },
                    "attachments": {
                        "type": "object"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Comment"
                }
            },
            "CommentCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CommentResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Comment"
                    }
                },
                "type": "object"
            },
            "CommunicationExtension": {
                "title": "CommunicationExtension",
                "description": "CommunicationExtension model",
                "required": [
                    "id",
                    "name",
                    "user_id",
                    "provider_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Any name"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "provider_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "user": {
                        "$ref": "#/components/schemas/Worker"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/CommunicationProvider"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CommunicationExtension"
                }
            },
            "CommunicationExtensionCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommunicationExtension"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CommunicationExtensionResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CommunicationExtension"
                    }
                },
                "type": "object"
            },
            "CommunicationProvider": {
                "title": "CommunicationProvider",
                "description": "CommunicationProvider model",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Any name"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CommunicationProvider"
                }
            },
            "CommunicationProviderCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommunicationProvider"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CommunicationProviderResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CommunicationProvider"
                    }
                },
                "type": "object"
            },
            "Email": {
                "title": "Email",
                "description": "Email model",
                "required": [
                    "email_template_id",
                    "subject",
                    "body"
                ],
                "properties": {
                    "email_template_id": {
                        "description": "Email tempalte ID",
                        "type": "integer"
                    },
                    "subject": {
                        "description": "Email subject",
                        "type": "string"
                    },
                    "body": {
                        "description": "Email body",
                        "type": "string"
                    },
                    "sent_by_system": {
                        "type": "boolean"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Email"
                }
            },
            "EmailCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Email"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "EmailResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Email"
                    }
                },
                "type": "object"
            },
            "EmailTemplates": {
                "title": "Email Templates",
                "description": "EmailTemplates model",
                "required": [
                    "name",
                    "body"
                ],
                "properties": {
                    "name": {
                        "description": "Email template name",
                        "type": "string"
                    },
                    "body": {
                        "description": "Email template body",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "EmailTemplates"
                }
            },
            "EmailTemplatesCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailTemplates"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "EmailTemplatesResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/EmailTemplates"
                    }
                },
                "type": "object"
            },
            "Notification": {
                "title": "Notification",
                "description": "Notification model",
                "required": [
                    "id",
                    "notifiable_id",
                    "notifiable_type",
                    "data",
                    "read_at",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "data": {
                        "required": [
                            "subject",
                            "text",
                            "sender_id"
                        ],
                        "properties": {
                            "subject": {
                                "description": "Subject of notification",
                                "type": "string"
                            },
                            "text": {
                                "description": "Text of notification",
                                "type": "string"
                            },
                            "sender_id": {
                                "description": "Worker sender ID",
                                "type": "string"
                            },
                            "template_id": {
                                "description": "Notification template ID",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "notifiable_id": {
                        "description": "Notification recipient ID",
                        "type": "integer"
                    },
                    "notifiable_type": {
                        "description": "Notification recipient type",
                        "type": "string"
                    },
                    "read_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "sender": {
                        "$ref": "#/components/schemas/Worker"
                    },
                    "notifiable": {
                        "type": "object",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Worker"
                            },
                            {
                                "$ref": "#/components/schemas/Customer"
                            }
                        ]
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Notification"
                }
            },
            "NotificationCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Notification"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "NotificationResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Notification"
                    }
                },
                "type": "object"
            },
            "NotificationTemplate": {
                "title": "NotificationTemplate",
                "description": "NotificationTemplate model",
                "required": [
                    "id",
                    "creator_id",
                    "data",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "creator_id": {
                        "type": "integer",
                        "example": "Worker ID"
                    },
                    "data": {
                        "required": [
                            "subject",
                            "text"
                        ],
                        "properties": {
                            "subject": {
                                "description": "Subject of notification template",
                                "type": "string"
                            },
                            "text": {
                                "description": "Text of notification template",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Worker"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "NotificationTemplate"
                }
            },
            "NotificationTemplateCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NotificationTemplate"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "NotificationTemplateResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/NotificationTemplate"
                    }
                },
                "type": "object"
            },
            "Config": {
                "title": "Config",
                "description": "Config model",
                "required": [
                    "id",
                    "config_type_id",
                    "data_type",
                    "name",
                    "value",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Config.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Setting"
                    },
                    "config_type_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "data_type": {
                        "type": "string",
                        "example": "json"
                    },
                    "value": {
                        "type": "string",
                        "example": "{}"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "configType": {
                        "$ref": "#/components/schemas/ConfigType"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Config"
                }
            },
            "ConfigCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Config"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "ConfigResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Config"
                    }
                },
                "type": "object"
            },
            "ConfigType": {
                "title": "ConfigType",
                "description": "Config type model",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "ConfigType.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Name"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "configs": {
                        "description": "Array of configs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigCollection"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ConfigType"
                }
            },
            "ConfigTypeCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigType"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "ConfigTypeResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ConfigType"
                    }
                },
                "type": "object"
            },
            "Currency": {
                "required": [
                    "id",
                    "name",
                    "iso3",
                    "symbol",
                    "is_available",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Currency ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Currency name",
                        "type": "string"
                    },
                    "iso3": {
                        "description": "Currency iso3",
                        "type": "string"
                    },
                    "symbol": {
                        "description": "Currency symbol",
                        "type": "string"
                    },
                    "is_available": {
                        "description": "Currency is available",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "deleted_at": {
                        "description": "Date and time of soft delete",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    },
                    "countries": {
                        "description": "Array of countries",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Country"
                        }
                    }
                },
                "type": "object"
            },
            "CurrencyCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Currency"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CurrencyResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Currency"
                    }
                },
                "type": "object"
            },
            "AuthCustomer": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "role": {
                        "$ref": "#/components/schemas/Role"
                    }
                },
                "type": "object"
            },
            "AuthCustomerCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuthCustomer"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "AuthCustomerResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AuthCustomer"
                    }
                },
                "type": "object"
            },
            "CustomerChatCustomerMessage": {
                "title": "CustomerChatCustomerMessage",
                "description": "ChatMessage model",
                "properties": {
                    "id": {
                        "description": "Customer ID",
                        "type": "integer"
                    },
                    "first_name": {
                        "description": "Customer first name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Customer last name",
                        "type": "string"
                    },
                    "gender": {
                        "description": "Customer gender",
                        "type": "integer"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChatMessage"
                }
            },
            "CustomerChatCustomerMessageCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerChatCustomerMessage"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CustomerChatCustomerMessageResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CustomerChatCustomerMessage"
                    }
                },
                "type": "object"
            },
            "CustomerChatMessage": {
                "title": "CustomerChatMessage",
                "description": "CustomerChatMessage model",
                "required": [
                    "id",
                    "user_id",
                    "customer_id",
                    "message",
                    "initiator_id",
                    "initiator_type",
                    "read"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string",
                        "example": "Message"
                    },
                    "initiator_id": {
                        "type": "integer",
                        "example": "Message owner ID"
                    },
                    "initiator_type": {
                        "type": "string",
                        "example": "Message owner Type"
                    },
                    "read": {
                        "type": "integer",
                        "example": "Read status 0 or 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "user": {
                        "$ref": "#/components/schemas/CustomerChatUserMessage"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/CustomerChatCustomerMessage"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CustomerChatMessage"
                }
            },
            "CustomerChatMessageCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerChatMessage"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CustomerChatMessageResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CustomerChatMessage"
                    }
                },
                "type": "object"
            },
            "CustomerChatUserMessage": {
                "title": "CustomerChatUserMessage",
                "description": "CustomerChatMessage model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "username": {
                        "description": "Username",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "User first name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "User last name",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChatMessage"
                }
            },
            "CustomerChatUserMessageCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomerChatUserMessage"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CustomerChatUserMessageResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CustomerChatUserMessage"
                    }
                },
                "type": "object"
            },
            "Customer": {
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "gender",
                    "password",
                    "email",
                    "phone",
                    "country_id",
                    "language_id"
                ],
                "properties": {
                    "id": {
                        "description": "Worker ID",
                        "type": "integer"
                    },
                    "first_name": {
                        "description": "First name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Last name",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "description": "Phone",
                        "type": "string",
                        "format": "phone"
                    },
                    "phone2": {
                        "description": "Second phone",
                        "type": "string",
                        "format": "phone",
                        "nullable": "true"
                    },
                    "birthday": {
                        "description": "Birthday",
                        "type": "string",
                        "nullable": "true"
                    },
                    "country_id": {
                        "description": "Country id",
                        "type": "integer"
                    },
                    "language_id": {
                        "description": "Language id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "supposed_language_id": {
                        "description": "Supposed language id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "platform_language_id": {
                        "description": "Platform language id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "state": {
                        "description": "State",
                        "type": "string",
                        "nullable": "true"
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "nullable": "true"
                    },
                    "address": {
                        "description": "Address",
                        "type": "string",
                        "nullable": "true"
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string",
                        "nullable": "true"
                    },
                    "verification_status_id": {
                        "description": "Verification status id",
                        "type": "string",
                        "nullable": "true"
                    },
                    "is_demo": {
                        "description": "Is demo",
                        "type": "boolean"
                    },
                    "is_active": {
                        "description": "Is active",
                        "type": "boolean"
                    },
                    "is_active_trading": {
                        "description": "Is active trading",
                        "type": "boolean"
                    },
                    "is_test": {
                        "description": "Is test",
                        "type": "boolean"
                    },
                    "affiliate_user_id": {
                        "description": "Affiliate user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "conversion_user_id": {
                        "description": "Conversion user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "retention_user_id": {
                        "description": "Retention user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "compliance_user_id": {
                        "description": "Compliance user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "support_user_id": {
                        "description": "Support user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "conversion_manager_user_id": {
                        "description": "Conversion manager user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "retention_manager_user_id": {
                        "description": "Retention manager user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "first_conversion_user_id": {
                        "description": "First conversion user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "first_retention_user_id": {
                        "description": "First retention user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "desk_id": {
                        "description": "Desk id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "department_id": {
                        "description": "Department id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "last_online": {
                        "description": "Last online",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "first_autologin_time": {
                        "description": "First auto login time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "first_login_time": {
                        "description": "First login time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "first_deposit_date": {
                        "description": "First deposit date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "last_approved_deposit_date": {
                        "description": "last approved deposit date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "last_pending_deposit_date": {
                        "description": "last pending deposit date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "last_pending_withdrawal_date": {
                        "description": "last pending withdrawal date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "last_communication_date": {
                        "description": "last communication date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "banned_at": {
                        "description": "Banned at",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "campaign_id": {
                        "description": "Campaign id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "offer_name": {
                        "description": "Offer name",
                        "type": "string",
                        "nullable": "true"
                    },
                    "offer_url": {
                        "description": "Offer url",
                        "type": "string",
                        "nullable": "true"
                    },
                    "comment_about_customer": {
                        "description": "Comment about customer",
                        "type": "string",
                        "nullable": "true"
                    },
                    "source": {
                        "description": "Source",
                        "type": "string",
                        "nullable": "true"
                    },
                    "click_id": {
                        "description": "Click id",
                        "type": "string",
                        "nullable": "true"
                    },
                    "free_param_1": {
                        "description": "Free param 1",
                        "type": "string",
                        "nullable": "true"
                    },
                    "free_param_2": {
                        "description": "Free param 2",
                        "type": "string",
                        "nullable": "true"
                    },
                    "free_param_3": {
                        "description": "Free param 3",
                        "type": "string",
                        "nullable": "true"
                    },
                    "balance": {
                        "description": "Balance",
                        "type": "number",
                        "format": "float",
                        "nullable": "true"
                    },
                    "balance_usd": {
                        "description": "Balance USD",
                        "type": "number",
                        "format": "float",
                        "nullable": "true"
                    },
                    "is_ftd": {
                        "description": "Is FTD",
                        "type": "boolean",
                        "nullable": "true"
                    },
                    "timezone": {
                        "description": "Timezone",
                        "type": "string",
                        "nullable": "true"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "deleted_at": {
                        "description": "Date and time of soft delete",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CustomerCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Customer"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CustomerResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Customer"
                    }
                },
                "type": "object"
            },
            "Department": {
                "title": "Department",
                "description": "Department model",
                "required": [
                    "id",
                    "name",
                    "title",
                    "is_active",
                    "is_default",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "properties": {
                    "id": {
                        "description": "Department.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Name"
                    },
                    "title": {
                        "type": "string",
                        "example": "Title"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": 1
                    },
                    "is_default": {
                        "type": "boolean",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Department"
                }
            },
            "DepartmentCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Department"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "DepartmentResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Department"
                    }
                },
                "type": "object"
            },
            "Desk": {
                "title": "Desk",
                "description": "Desk model",
                "required": [
                    "id",
                    "name",
                    "title",
                    "is_active",
                    "parent_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Any name"
                    },
                    "is_active": {
                        "description": "Activity of desk",
                        "type": "boolean"
                    },
                    "parent_id": {
                        "description": "Parent desk id",
                        "type": "integer"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/Desk"
                    },
                    "ancestors": {
                        "description": "Array of Desk ancestors",
                        "type": "array",
                        "items": {},
                        "example": "[]"
                    },
                    "descendants": {
                        "description": "Array of Desk descendants",
                        "type": "array",
                        "items": {},
                        "example": "[]"
                    },
                    "children": {
                        "description": "Array of Desk children",
                        "type": "array",
                        "items": {},
                        "example": "[]"
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Language"
                        }
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Country"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Desk"
                }
            },
            "DeskCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Desk"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "DeskResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Desk"
                    }
                },
                "type": "object"
            },
            "Country": {
                "title": "Country",
                "description": "Country model",
                "required": [
                    "id",
                    "name",
                    "iso2",
                    "iso3",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "properties": {
                    "id": {
                        "description": "Country.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Russia"
                    },
                    "iso2": {
                        "type": "string",
                        "example": "RU"
                    },
                    "iso3": {
                        "type": "string",
                        "example": "RUS"
                    },
                    "currency": {
                        "type": "string",
                        "example": "RUB"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Country"
                }
            },
            "CountryCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Country"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CountryResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Country"
                    }
                },
                "type": "object"
            },
            "Language": {
                "title": "Language",
                "description": "Language model",
                "required": [
                    "id",
                    "name",
                    "iso2",
                    "iso3",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "properties": {
                    "id": {
                        "description": "Language.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Russian"
                    },
                    "code": {
                        "type": "string",
                        "example": "rus"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Language"
                }
            },
            "LanguageCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Language"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "LanguageResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Language"
                    }
                },
                "type": "object"
            },
            "Column": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "Column ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Column name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ColumnCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Column"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "ColumnResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Column"
                    }
                },
                "type": "object"
            },
            "Permission": {
                "required": [
                    "id",
                    "name",
                    "guard_name",
                    "model_id",
                    "action_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Role ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "User",
                        "type": "string"
                    },
                    "guard_name": {
                        "description": "api",
                        "type": "string"
                    },
                    "action_id": {
                        "description": "Action ID",
                        "type": "integer"
                    },
                    "model_id": {
                        "description": "Model ID",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01 00:00:00"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01 00:00:00"
                    }
                },
                "type": "object"
            },
            "PermissionCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "PermissionResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Permission"
                    }
                },
                "type": "object"
            },
            "Role": {
                "required": [
                    "id",
                    "name",
                    "guard_name",
                    "key",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Role ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "User",
                        "type": "string"
                    },
                    "guard_name": {
                        "description": "api",
                        "type": "string"
                    },
                    "key": {
                        "description": "key",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01 00:00:00"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01 00:00:00"
                    },
                    "permissions": {
                        "description": "Permission array",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    }
                },
                "type": "object"
            },
            "RoleCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "RoleResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Role"
                    }
                },
                "type": "object"
            },
            "SaleStatus": {
                "title": "SaleStatus",
                "description": "SaleStatus model",
                "required": [
                    "name",
                    "title",
                    "color"
                ],
                "properties": {
                    "id": {
                        "description": "SaleStatus.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Any name"
                    },
                    "title": {
                        "type": "string",
                        "example": "Any title"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": "1"
                    },
                    "color": {
                        "type": "string",
                        "example": "#e1e1e1"
                    },
                    "department_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "department": {
                        "$ref": "#/components/schemas/Department"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SaleStatus"
                }
            },
            "SaleStatusCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaleStatus"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "SaleStatusResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/SaleStatus"
                    }
                },
                "type": "object"
            },
            "Token": {
                "title": "Token",
                "description": "Token model",
                "required": [
                    "id",
                    "token",
                    "user_id",
                    "ip",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "user_id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "user": {
                        "$ref": "#/components/schemas/Worker"
                    },
                    "token": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string",
                        "format": "ipv4"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Token"
                }
            },
            "TokenCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Token"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "TokenResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Token"
                    }
                },
                "type": "object"
            },
            "Transaction": {
                "required": [
                    "id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Transaction method ID",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "deleted_at": {
                        "description": "Date and time of soft delete",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TransactionCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "TransactionResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Transaction"
                    }
                },
                "type": "object"
            },
            "TransactionStatus": {
                "required": [
                    "id",
                    "name",
                    "title",
                    "is_active",
                    "is_valid",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Transaction status ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Transaction status name",
                        "type": "string"
                    },
                    "title": {
                        "description": "Transaction status title",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Transaction status is active",
                        "type": "boolean"
                    },
                    "is_valid": {
                        "description": "Transaction status is valid",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "deleted_at": {
                        "description": "Date and time of soft delete",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TransactionStatusCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionStatus"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "TransactionStatusResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/TransactionStatus"
                    }
                },
                "type": "object"
            },
            "TransactionsMethod": {
                "required": [
                    "id",
                    "name",
                    "title",
                    "is_active",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Transaction method ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Transaction method name",
                        "type": "string"
                    },
                    "title": {
                        "description": "Transaction method title",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Transaction method is active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "deleted_at": {
                        "description": "Date and time of soft delete",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TransactionsMethodCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionsMethod"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "TransactionsMethodResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/TransactionsMethod"
                    }
                },
                "type": "object"
            },
            "TransactionsMt5Type": {
                "required": [
                    "id",
                    "name",
                    "title",
                    "mt5_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Transaction MT5 type ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Transaction MT5 type name",
                        "type": "string"
                    },
                    "title": {
                        "description": "Transaction MT5 type title",
                        "type": "string"
                    },
                    "mt5_id": {
                        "description": "Transaction MT5 type mt5_id",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "deleted_at": {
                        "description": "Date and time of soft delete",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TransactionsMt5TypeCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionsMt5Type"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "TransactionsMt5TypeResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/TransactionsMt5Type"
                    }
                },
                "type": "object"
            },
            "TransactionsWallet": {
                "required": [
                    "id",
                    "name",
                    "title",
                    "mt5_id",
                    "currency_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Wallet ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Wallet name",
                        "type": "string"
                    },
                    "title": {
                        "description": "Wallet title",
                        "type": "string"
                    },
                    "mt5_id": {
                        "description": "Wallet mt5_id",
                        "type": "string"
                    },
                    "currency_id": {
                        "description": "Wallet currency_id",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "deleted_at": {
                        "description": "Date and time of soft delete",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TransactionsWalletCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionsWallet"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "TransactionsWalletResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/TransactionsWallet"
                    }
                },
                "type": "object"
            },
            "AuthUser": {
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "permissions",
                    "roles"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roles": {
                        "description": "Array of roles",
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "name",
                                "key",
                                "guard_name"
                            ],
                            "properties": {
                                "id": {
                                    "description": "Role ID",
                                    "type": "integer"
                                },
                                "name": {
                                    "description": "Name of role",
                                    "type": "string"
                                },
                                "key": {
                                    "description": "Constant key of role",
                                    "type": "string"
                                },
                                "guard_name": {
                                    "description": "Name of auth guard",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "AuthUserCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuthUser"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "AuthUserResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AuthUser"
                    }
                },
                "type": "object"
            },
            "DisplayOption": {
                "required": [
                    "id",
                    "user_id",
                    "name",
                    "columns"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "model_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Worker"
                        }
                    },
                    "model": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DisplayOptionCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DisplayOption"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "DisplayOptionResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/DisplayOption"
                    }
                },
                "type": "object"
            },
            "Preset": {
                "required": [
                    "id",
                    "user_id",
                    "name",
                    "columns"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "model_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Worker"
                        }
                    },
                    "model": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PresetCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Preset"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "PresetResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Preset"
                    }
                },
                "type": "object"
            },
            "Worker": {
                "required": [
                    "id",
                    "username",
                    "first_name",
                    "last_name",
                    "is_active",
                    "show_on_scoreboards",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Worker ID",
                        "type": "integer"
                    },
                    "username": {
                        "description": "Worker username",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "First name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Last name",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "is_active": {
                        "description": "Worker activity flag",
                        "type": "boolean"
                    },
                    "target": {
                        "description": "Target amount for the worker",
                        "type": "integer",
                        "nullable": true
                    },
                    "show_on_scoreboards": {
                        "description": "Show on scoreboards",
                        "type": "boolean"
                    },
                    "affiliate_id": {
                        "description": "Affiliate worker ID",
                        "type": "integer"
                    },
                    "communication_provider_id": {
                        "description": "Default communication provider ID",
                        "type": "integer"
                    },
                    "last_login": {
                        "description": "Date and time of last login",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "deleted_at": {
                        "description": "Date and time of soft delete",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    },
                    "permissions": {
                        "description": "Permission array",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "roles": {
                        "description": "Array of roles",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "communication_provider": {
                        "$ref": "#/components/schemas/CommunicationProvider"
                    },
                    "communication_extensions": {
                        "description": "Array of Communication extensions",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommunicationExtension"
                        }
                    }
                },
                "type": "object"
            },
            "WorkerCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Worker"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "WorkerResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Worker"
                    }
                },
                "type": "object"
            },
            "Meta": {
                "properties": {
                    "pagination": {
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "count": {
                                "type": "integer"
                            },
                            "per_page": {
                                "type": "integer"
                            },
                            "current_page": {
                                "type": "integer"
                            },
                            "total_pages": {
                                "type": "integer"
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Error description"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token stateless authentication",
                "scheme": "bearer"
            },
            "sanctum_frontend": {
                "type": "apiKey",
                "in": "cookie",
                "name": "laravel_session",
                "description": "Laravel Sanctum stateful authentication"
            },
            "oauth2_google": {
                "type": "oauth2",
                "description": "Google OAuth2 stateful authentication",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "/admin/auth/login/google?redirect_url=http%3A%2F%2Flocalhost&remember_me=1"
                    }
                }
            }
        }
    }
}
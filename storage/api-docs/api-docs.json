{
    "openapi": "3.0.0",
    "info": {
        "title": "Stoxtech Admin API",
        "version": "1.0.0"
    },
    "paths": {
        "/admin/brands/all": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Get brands list",
                "description": "Returns brands list data.",
                "operationId": "brands.all",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/brands": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Get brands list",
                "description": "Returns brands list data.",
                "operationId": "brands.index",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brand"
                ],
                "summary": "Store brand",
                "description": "Returns brand data.",
                "operationId": "brands.store",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "slug",
                                    "logo_url"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "logo_url": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/brands/{id}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "summary": "Show brand",
                "description": "Returns brand data.",
                "operationId": "brands.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Brand"
                ],
                "summary": "Update a brand",
                "operationId": "a2095cdf34924899b60bb49de21eb565",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "logo_url": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brand"
                ],
                "summary": "Delete a brand",
                "operationId": "8ee4bf224461c4894c6e30148a6523a3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Brand"
                ],
                "summary": "Update a brand",
                "operationId": "3335140a0f1ae501a78cbd3506a3d173",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "slug": {
                                        "type": "string"
                                    },
                                    "logo_url": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/extensions": {
            "get": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Get communication extension list",
                "operationId": "6bce1f19307c3cc87217644f8307e219",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Store communication extension",
                "operationId": "5f443c295cfdca84e96032dff6f7af90",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of communication extension",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/extensions/{id}": {
            "get": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Get communication extension",
                "operationId": "f37bac7e954e01aefbc4aeb9ce82a195",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Update communication extension",
                "operationId": "66ac2fb4b4382167de8bdd9eb9c9a547",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of communication extension",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Delete communication extension",
                "operationId": "4fb57d490095742cdf523f8d5d3a5a25",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Update communication extension",
                "operationId": "7f069a9305a21a9ec7a46f09557504c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of communication extension",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationExtensionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/providers": {
            "get": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Get communication provider list",
                "operationId": "b603c10e424d41ad7fc6755522f3e9a4",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Store communication provider",
                "operationId": "b97191f1615d112d2813b5687185c1fa",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of communication provider",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/communication/providers/{id}": {
            "get": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Get communication provider",
                "operationId": "77645bbb080382810270094488afca8a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Update communication provider",
                "operationId": "dcfb57acc519a94b1d40e859e6f93dd5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of communication provider",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Delete communication provider",
                "operationId": "12995c10d56497fd14b68c1ca96e8ade",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "CommunicationProvider"
                ],
                "summary": "Update communication provider",
                "operationId": "9543027ee0880924281fc99448e41305",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of communication provider",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationProviderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/configs": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "Get configs",
                "operationId": "2333f94a4855e881041af633d76def2d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Config"
                ],
                "summary": "Add a new config",
                "operationId": "86626df02b9185f66dff9d0971ca44f6",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "config_type_id",
                                    "data_type",
                                    "name",
                                    "value"
                                ],
                                "properties": {
                                    "config_type_id": {
                                        "description": "Config type ID",
                                        "type": "integer"
                                    },
                                    "data_type": {
                                        "description": "Data type",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Config`s name",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Config`s value",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/configs/{id}": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "Get config data",
                "operationId": "1158766cbc221ebdfd591651299902f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Config"
                ],
                "summary": "Update a config",
                "operationId": "3a1b02052d6ca0a4ada89f03f05893a4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "config_type_id",
                                    "data_type",
                                    "name",
                                    "value"
                                ],
                                "properties": {
                                    "config_type_id": {
                                        "description": "Config type ID",
                                        "type": "integer"
                                    },
                                    "data_type": {
                                        "description": "Data type",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Config`s name",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Config`s value",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Config"
                ],
                "summary": "Delete a config",
                "operationId": "d0708a91c71ef4e9b40f588a14338af0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Config"
                ],
                "summary": "Update a config",
                "operationId": "90f09248057230cf7b6e1a7049928c03",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "config_type_id": {
                                        "description": "Config type ID",
                                        "type": "integer"
                                    },
                                    "data_type": {
                                        "description": "Data type",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Config`s name",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Config`s value",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/configs/types": {
            "get": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Get config types",
                "operationId": "67f87329dd5c2305c25982cce4233b48",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigTypeCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Add a new config type",
                "operationId": "f0b5373e99be1030f6ba91690dc30cbf",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Config types`s name",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigTypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/configs/types/{id}": {
            "get": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Get config type data",
                "operationId": "60cbfad03321cb287cedb39490d17e7f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigTypeResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Update a config type",
                "operationId": "232134e689e991251ec452fce456e383",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Config type`s name",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigTypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Delete a config type",
                "operationId": "89979e6080bcc7d6598a3b15aba64bdf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "ConfigType"
                ],
                "summary": "Update a config type",
                "operationId": "6698188f48905dcc54874de79d3006de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Config type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Config type`s name",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigTypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/{id}/reset-password": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Reset password",
                "operationId": "e034fa77747e6febb295eeae32959388",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "token": {
                                        "type": "string"
                                    },
                                    "send_email": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "password": {
                                            "type": "string",
                                            "format": "password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Accepted"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/customers": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get customers list",
                "description": "Returns customers list data.",
                "operationId": "470ff1ac92d4011d996b0bc5dbb5d948",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Store customer",
                "description": "Returns customer data.",
                "operationId": "bad3127c45e2947eef44ae707d7ea0a2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "gender",
                                    "email",
                                    "password",
                                    "phone",
                                    "country_id",
                                    "language_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "1-Male, 2-Female, 3-Other",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password of customer",
                                        "type": "string"
                                    },
                                    "phone": {
                                        "description": "Phone",
                                        "type": "string",
                                        "format": "phone"
                                    },
                                    "country_id": {
                                        "description": "Country id",
                                        "type": "integer"
                                    },
                                    "language_id": {
                                        "description": "Language id",
                                        "type": "integer",
                                        "nullable": "true"
                                    },
                                    "phone2": {
                                        "description": "Second phone",
                                        "type": "string",
                                        "format": "phone",
                                        "nullable": "true"
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "postal_code": {
                                        "description": "Post code",
                                        "type": "integer"
                                    },
                                    "desk_id": {
                                        "description": "Desk id",
                                        "type": "integer",
                                        "nullable": "true"
                                    },
                                    "offer_name": {
                                        "description": "Offer name",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "offer_url": {
                                        "description": "Offer url",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "comment_about_customer": {
                                        "description": "Comment about customer",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "source": {
                                        "description": "Source",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "click_id": {
                                        "description": "Click id",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_1": {
                                        "description": "Free param 1",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_2": {
                                        "description": "Free param 2",
                                        "type": "string",
                                        "nullable": "true"
                                    },
                                    "free_param_3": {
                                        "description": "Free param 3",
                                        "type": "string",
                                        "nullable": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/{id}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get customer",
                "description": "Returns customer data.",
                "operationId": "bc9c1d2ce85d47cc898bf5fb8ec03776",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customer"
                ],
                "summary": "Update a customer",
                "operationId": "37826335160a27c47aac2543710caefd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "affiliate_user_id": {
                                        "description": "Affiliate worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_user_id": {
                                        "description": "Conversion worker ID",
                                        "type": "integer"
                                    },
                                    "retention_user_id": {
                                        "description": "Retention user ID",
                                        "type": "integer"
                                    },
                                    "compliance_user_id": {
                                        "description": "Compliance worker ID",
                                        "type": "integer"
                                    },
                                    "support_user_id": {
                                        "description": "Support worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_manager_user_id": {
                                        "description": "Conversion manager worker ID",
                                        "type": "integer"
                                    },
                                    "retention_manager_user_id": {
                                        "description": "Retention manager worker ID",
                                        "type": "integer"
                                    },
                                    "first_conversion_user_id": {
                                        "description": "First conversion worker ID",
                                        "type": "integer"
                                    },
                                    "first_retention_user_id": {
                                        "description": "First retention worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_sale_status_id": {
                                        "description": "Conversion sale status ID",
                                        "type": "integer"
                                    },
                                    "retention_sale_status_id": {
                                        "description": "Retention sale status ID",
                                        "type": "integer"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Permission ID",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Status of customer permission",
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "reason": {
                                                                "description": "Reason of change status",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Customer"
                ],
                "summary": "Update a customer",
                "operationId": "2bf40a061e82cc15e45b99b88ef8f291",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "affiliate_user_id": {
                                        "description": "Affiliate worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_user_id": {
                                        "description": "Conversion worker ID",
                                        "type": "integer"
                                    },
                                    "retention_user_id": {
                                        "description": "Retention user ID",
                                        "type": "integer"
                                    },
                                    "compliance_user_id": {
                                        "description": "Compliance worker ID",
                                        "type": "integer"
                                    },
                                    "support_user_id": {
                                        "description": "Support worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_manager_user_id": {
                                        "description": "Conversion manager worker ID",
                                        "type": "integer"
                                    },
                                    "retention_manager_user_id": {
                                        "description": "Retention manager worker ID",
                                        "type": "integer"
                                    },
                                    "first_conversion_user_id": {
                                        "description": "First conversion worker ID",
                                        "type": "integer"
                                    },
                                    "first_retention_user_id": {
                                        "description": "First retention worker ID",
                                        "type": "integer"
                                    },
                                    "conversion_sale_status_id": {
                                        "description": "Conversion sale status ID",
                                        "type": "integer"
                                    },
                                    "retention_sale_status_id": {
                                        "description": "Retention sale status ID",
                                        "type": "integer"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Permission ID",
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "description": "Status of customer permission",
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "reason": {
                                                                "description": "Reason of change status",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customers/ban": {
            "patch": {
                "tags": [
                    "Customer"
                ],
                "summary": "Ban customers",
                "operationId": "6effcf150a36ae9c712a41d26a555b3c",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customers"
                                ],
                                "properties": {
                                    "customers": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Customer ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customers/unban": {
            "patch": {
                "tags": [
                    "Customer"
                ],
                "summary": "Unban customers",
                "operationId": "d7c85045ee2fb9e28548fc656e13d013",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customers"
                                ],
                                "properties": {
                                    "customers": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Customer ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/export/excel": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Export customers excel data",
                "operationId": "bdce7eab4343326fdb37287840639d5e",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/export/csv": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Export customers csv data",
                "operationId": "0b986c549a736d91b9a00ac9152a073b",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/import/excel": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Import customers excel data",
                "operationId": "77226928c68906cfcad9d5248e1d5627",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/customers/import/csv": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Import customers csv data",
                "operationId": "a0c7f9d1ffeffefe2fbd980e8951e23f",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/customer/auth/register": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Register customer",
                "description": "Registers a customer",
                "operationId": "55d3fba222b2af21661454d5f5d16907",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "gender",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "country_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "gender": {
                                        "description": "1-Male, 2-Female, 3-Other",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2,
                                            3
                                        ],
                                        "example": "1"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password of customer",
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 6
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 6
                                    },
                                    "phone": {
                                        "description": "Phone",
                                        "type": "string",
                                        "format": "phone",
                                        "pattern": "^\\+(?:\\d){6,14}\\d$"
                                    },
                                    "country_id": {
                                        "description": "Country id",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content. The session ID is returned in a cookie named `laravel_session`. You need to include this cookie in subsequent requests.",
                        "headers": {
                            "Set-Cookie(example-1)": {
                                "description": "Encrypted session ID cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "laravel_session=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            },
                            "Set-Cookie(example-2)": {
                                "description": "Encrypted recaller cookie. Set if `remember_me=true` was received",
                                "schema": {
                                    "type": "string",
                                    "example": "remember_web_59ba...=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            }
                        }
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/departments": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get departments list",
                "description": "Returns departments list data.",
                "operationId": "departments.index",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Department"
                ],
                "summary": "Store department",
                "description": "Returns department data.",
                "operationId": "departments.store",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": true,
                        "example": "Name"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title",
                        "required": true,
                        "example": "Title"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active",
                        "required": false,
                        "example": 1
                    },
                    {
                        "name": "is_default",
                        "in": "query",
                        "description": "Is default",
                        "required": false,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/departments/{id}": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get department",
                "description": "Returns department data.",
                "operationId": "departments.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Department"
                ],
                "summary": "Delete department",
                "description": "Returns status.",
                "operationId": "departments.delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Department"
                ],
                "summary": "Update department",
                "description": "Returns department data.",
                "operationId": "departments.update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department id",
                        "required": true,
                        "example": 1
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": false,
                        "example": "Name"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title",
                        "required": false,
                        "example": "Title"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Is active",
                        "required": false,
                        "example": 1
                    },
                    {
                        "name": "is_default",
                        "in": "query",
                        "description": "Is default",
                        "required": false,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/departments/workers": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get departments workers",
                "operationId": "78929ce15246da20fa37a8c184f04bef",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/countries": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get countries list",
                "description": "Returns countries list data.",
                "operationId": "countries.index",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Store country",
                "description": "Returns country data.",
                "operationId": "countries.store",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": true,
                        "example": "Russia"
                    },
                    {
                        "name": "iso2",
                        "in": "query",
                        "description": "ISO2",
                        "required": true,
                        "example": "RU"
                    },
                    {
                        "name": "iso3",
                        "in": "query",
                        "description": "ISO3",
                        "required": true,
                        "example": "RUS"
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency",
                        "required": true,
                        "example": "RUB"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/countries/{id}": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get country",
                "description": "Returns country data.",
                "operationId": "countries.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Country"
                ],
                "summary": "Delete country",
                "description": "Returns status.",
                "operationId": "countries.delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Country"
                ],
                "summary": "Update country",
                "description": "Returns country data.",
                "operationId": "countries.update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "example": 1
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": false,
                        "example": "Russia"
                    },
                    {
                        "name": "iso2",
                        "in": "query",
                        "description": "ISO2",
                        "required": false,
                        "example": "RU"
                    },
                    {
                        "name": "iso3",
                        "in": "query",
                        "description": "ISO3",
                        "required": false,
                        "example": "RUS"
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "description": "Currency",
                        "required": false,
                        "example": "RUB"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/languages": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get languages list",
                "description": "Returns languages list data.",
                "operationId": "languages.index",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Language"
                ],
                "summary": "Store language",
                "description": "Returns language data.",
                "operationId": "languages.store",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": true,
                        "example": "Russia"
                    },
                    {
                        "name": "iso2",
                        "in": "query",
                        "description": "ISO2",
                        "required": true,
                        "example": "RU"
                    },
                    {
                        "name": "iso3",
                        "in": "query",
                        "description": "ISO3",
                        "required": true,
                        "example": "RUS"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/languages/{id}": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get language",
                "description": "Returns language data.",
                "operationId": "languages.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Language id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Language"
                ],
                "summary": "Delete language",
                "description": "Returns status.",
                "operationId": "languages.delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Language id",
                        "required": true,
                        "example": 1
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Language"
                ],
                "summary": "Update language",
                "description": "Returns language data.",
                "operationId": "languages.update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Language id",
                        "required": true,
                        "example": 1
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name",
                        "required": false,
                        "example": "Russia"
                    },
                    {
                        "name": "iso2",
                        "in": "query",
                        "description": "ISO2",
                        "required": false,
                        "example": "RU"
                    },
                    {
                        "name": "iso3",
                        "in": "query",
                        "description": "ISO3",
                        "required": false,
                        "example": "RUS"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LanguageResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/columns": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get columns",
                "operationId": "9642d39237e45720c4716ebb2b63db2d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ColumnCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Add a new сolumn",
                "operationId": "d4ad24f15b75610c397f521feeb4ccbf",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of column"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ColumnResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/columns/{id}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get column data",
                "operationId": "225fb38157f0e296bf25e56bb1c91ff1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Column ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ColumnResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update a сolumn",
                "operationId": "92a488be8b06a62ba1aec55e91e78064",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Column ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of column"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ColumnResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Permission"
                ],
                "summary": "Delete a column",
                "operationId": "d4452f7f17a82d92a0284485ecc5a98a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Column ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update a column",
                "operationId": "578b679bde11f0f14a698721253ddad3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Column ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of column"
                                    },
                                    "guard_name": {
                                        "description": "Guard name",
                                        "type": "string"
                                    },
                                    "key": {
                                        "description": "Key",
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "description": "Array of permission`s ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ColumnResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/{id}/columns": {
            "put": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update permission columns",
                "operationId": "9361892c39a0ae8b8da9be21536ca618",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "columns"
                                ],
                                "properties": {
                                    "columns": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Column id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get permissions",
                "operationId": "a8738d83e0262ce8916d4361d9ca1b5d",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/all": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get all permissions",
                "operationId": "f6da82ef435f070a7fd81137268322ef",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/{id}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get permission data",
                "operationId": "7f440d2efa45f5f5b2ff77a3cdee3d26",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/permissions/count": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get permissions count",
                "operationId": "d522da5d9c285285b9c0f5c226b40713",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/roles": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get roles",
                "operationId": "d134eb6a4ba203fb7448af7ab321c376",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Add a new role",
                "operationId": "b5335ad634fc1f4475b8e43e43dba0e3",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "guard_name",
                                    "key",
                                    "permissions"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of role"
                                    },
                                    "guard_name": {
                                        "description": "Guard name",
                                        "type": "string"
                                    },
                                    "key": {
                                        "description": "Key",
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "description": "Array of permission`s ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/roles/{id}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get role data",
                "operationId": "5476a17a1a8e92e4ae380afa959f0d20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update a role",
                "operationId": "2c5c949404129653d34fb02ee487248f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "guard_name",
                                    "key",
                                    "permissions"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of role"
                                    },
                                    "guard_name": {
                                        "description": "Guard name",
                                        "type": "string"
                                    },
                                    "key": {
                                        "description": "Key",
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "description": "Array of permission`s ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete a role",
                "operationId": "a83de148463c08c56e7c3ba05f86a5c2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Role"
                ],
                "summary": "Update a role",
                "operationId": "8b8fc1ffafc15a4acbdf89044b13b1d7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of role"
                                    },
                                    "guard_name": {
                                        "description": "Guard name",
                                        "type": "string"
                                    },
                                    "key": {
                                        "description": "Key",
                                        "type": "string"
                                    },
                                    "permissions": {
                                        "description": "Array of permission`s ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/sale-statuses": {
            "get": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Get salestatus list",
                "description": "Returns salestatus list data.",
                "operationId": "ffa6789ab6fe18c80e47fe5092533559",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Store salestatus",
                "description": "Returns salestatus data.",
                "operationId": "84a86fd9a91b69f0a1e79ab80b91fb49",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "color"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of sale status",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of sale status",
                                        "type": "string"
                                    },
                                    "color": {
                                        "description": "RGB HEX",
                                        "type": "string",
                                        "example": "#e1e1e1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/sale-statuses/{id}": {
            "get": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Get salestatus",
                "description": "Returns salestatus data.",
                "operationId": "512b5fa2cae02ebfb639715f3319fc72",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sale statuses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Update salestatus",
                "description": "Returns salestatus data.",
                "operationId": "83b3eb51afba342ce220ad299f7eaa6b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sale statuses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "title",
                                    "color"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of sale status",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of sale status",
                                        "type": "string"
                                    },
                                    "color": {
                                        "description": "RGB HEX",
                                        "type": "string",
                                        "example": "#e1e1e1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Delete salestatus",
                "description": "Returns status.",
                "operationId": "9485c480b3bf562d78b5b9c9c4db898a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sale statuses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "SaleStatus"
                ],
                "summary": "Update salestatus",
                "description": "Returns salestatus data.",
                "operationId": "44e9fcaa7348acd0a8ab081721d4a704",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sale statuses ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Name of sale status",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of sale status",
                                        "type": "string"
                                    },
                                    "color": {
                                        "description": "RGB HEX",
                                        "type": "string",
                                        "example": "#e1e1e1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SaleStatusResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Steteful login worker",
                "operationId": "0000595c89318605a085f8278dfb593f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "description": "Username or Email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "remember_me": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content. The session ID is returned in a cookie named `laravel_session`. You need to include this cookie in subsequent requests.",
                        "headers": {
                            "Set-Cookie(example-1)": {
                                "description": "Encrypted session ID cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "laravel_session=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            },
                            "Set-Cookie(example-2)": {
                                "description": "Encrypted recaller cookie. Set if `remember_me=true` was received",
                                "schema": {
                                    "type": "string",
                                    "example": "remember_web_59ba...=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            }
                        }
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Steteful logout worker",
                "operationId": "623a31a6ecbba78e4ee88edad388b138",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    }
                },
                "security": [
                    {
                        "sanctum_frontend": []
                    }
                ]
            }
        },
        "/admin/auth/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authorized worker data",
                "operationId": "3b211723942663a3046347a8b9f9004a",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthUserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    }
                },
                "security": [
                    {
                        "sanctum_frontend": []
                    }
                ]
            }
        },
        "/admin/workers/{id}/brand": {
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker brands",
                "operationId": "f925d8c3fc4affbee411ed10cf59b255",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brands"
                                ],
                                "properties": {
                                    "brands": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Brand id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{id}/country": {
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker countries",
                "operationId": "de69e9dad98cbd42520160619ad9ec93",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "countries"
                                ],
                                "properties": {
                                    "countries": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Country id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{id}/department": {
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker departments",
                "operationId": "331336218a2f76ceb0720f5e6cbbcca6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "departments"
                                ],
                                "properties": {
                                    "departments": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Department id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{id}/desk": {
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker desks",
                "operationId": "3c369b7abc43a3752e2f6faa4b65cc93",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "desks"
                                ],
                                "properties": {
                                    "desks": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Desk id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{workerId}/display-options": {
            "post": {
                "tags": [
                    "Worker"
                ],
                "summary": "Add a new worker`s display option",
                "operationId": "3cc600033e060b1e0944ae3bdb4c4997",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "model_id",
                                    "name",
                                    "columns"
                                ],
                                "properties": {
                                    "model_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "columns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayOptionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{workerId}/display-options/{displayOptionId}": {
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update a worker`s display option",
                "operationId": "51d02c2d6ad4c4ec2c46906af4903f3d",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "displayOptionId",
                        "in": "path",
                        "description": "Display option id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "model_id",
                                    "name"
                                ],
                                "properties": {
                                    "model_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "columns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayOptionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Worker"
                ],
                "summary": "Delete a worker`s display option",
                "operationId": "f9b2b9345ed6e7406acaeaca2b488eaf",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "displayOptionId",
                        "in": "path",
                        "description": "Display option id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update a worker",
                "operationId": "a68dabe45a22274481c43a5afcb9c937",
                "parameters": [
                    {
                        "name": "workerId",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "displayOptionId",
                        "in": "path",
                        "description": "Display option id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "model_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "columns": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayOptionResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{id}/language": {
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update worker languages",
                "operationId": "d1983466c95ec4772f21be6e61c69520",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "languages"
                                ],
                                "properties": {
                                    "languages": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Language id",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/auth/forget-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Send Reset Password Notification",
                "operationId": "6588ee88df2cbd2ec882d00b8ec24eb2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/auth/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset Password",
                "operationId": "f90e47572b7c88223f3c144e7ca73026",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/admin/auth/callback/{provider}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "OAuth provider callback endpoint",
                "operationId": "7e90017f737dac29a1d287d87bc7cc15",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "OAuth provider name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "google"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects to `redirect_url` with cookies (and possibly validation or application errors in query params)",
                        "headers": {
                            "Set-Cookie": {
                                "schema": {
                                    "type": "string",
                                    "example": "laravel_session=eyJpdiI6IjZKZm...%3D; Path=/; Domain=localhost; HttpOnly; Expires=Fri, 18 Nov 2022 13:25:26 GMT;"
                                }
                            },
                            "Location": {
                                "schema": {
                                    "type": "string",
                                    "example": "{redirect_url}?code=422&message%5Bmessage%5D=The%20provided%20credentials%20are%20incorrect.&message%5Berrors%5D%5Bemail%5D%5B0%5D=The%20provided%20credentials%20are%20incorrect"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/auth/login/{provider}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "OAuth provider login endpoint",
                "operationId": "d7faf6de8b626da990c15a2ab1615605",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "OAuth provider name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "google"
                        }
                    },
                    {
                        "name": "remember_me",
                        "in": "query",
                        "description": "Remember user",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                "1",
                                "0"
                            ]
                        }
                    },
                    {
                        "name": "redirect_url",
                        "in": "query",
                        "description": "URL where the user will be redirected after authentication",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects to auth page"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/workers": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "Get workers",
                "operationId": "ccb21f208e5fbe9dbd47c9d39829e205",
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Worker"
                ],
                "summary": "Add a new worker",
                "operationId": "da31777849413b599e5ffe4bc77f9db2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "first_name",
                                    "last_name",
                                    "password",
                                    "password_confirmation",
                                    "roles"
                                ],
                                "properties": {
                                    "username": {
                                        "description": "Worker username"
                                    },
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "is_active": {
                                        "description": "Worker activity flag",
                                        "type": "boolean"
                                    },
                                    "target": {
                                        "description": "Target amount for the worker",
                                        "type": "integer"
                                    },
                                    "parent_id": {
                                        "description": "Parent worker ID",
                                        "type": "integer"
                                    },
                                    "roles": {
                                        "description": "Array of roles ID",
                                        "properties": {
                                            "affiliate_id": {
                                                "description": "Affiliate worker ID",
                                                "type": "integer"
                                            },
                                            "show_on_scoreboards": {
                                                "description": "Show on scoreboards",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/{id}": {
            "get": {
                "tags": [
                    "Worker"
                ],
                "summary": "Get worker data",
                "operationId": "359da0eae0f04a73c55066cd67112f82",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update a worker",
                "operationId": "278a2b82092a5514efe40bafeba5f9f1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "first_name",
                                    "last_name",
                                    "password",
                                    "password_confirmation",
                                    "roles"
                                ],
                                "properties": {
                                    "username": {
                                        "description": "Worker username",
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "is_active": {
                                        "description": "Worker activity flag",
                                        "type": "boolean"
                                    },
                                    "target": {
                                        "description": "Target amount for the worker",
                                        "type": "integer"
                                    },
                                    "parent_id": {
                                        "description": "Parent worker ID",
                                        "type": "integer"
                                    },
                                    "roles": {
                                        "description": "Array of roles ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "change_password": {
                                        "description": "Must be set to true if the password is changed.",
                                        "type": "boolean"
                                    },
                                    "affiliate_id": {
                                        "description": "Affiliate worker ID",
                                        "type": "integer"
                                    },
                                    "show_on_scoreboards": {
                                        "description": "Show on scoreboards",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Worker"
                ],
                "summary": "Delete a worker",
                "operationId": "cdf83c0b6567f662b50ddc5a811c8d91",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Worker"
                ],
                "summary": "Update a worker",
                "operationId": "29a2d3523eea86f75d65ccc3e599bc8e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "description": "Worker username",
                                        "type": "string"
                                    },
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "is_active": {
                                        "description": "Worker activity flag",
                                        "type": "boolean"
                                    },
                                    "target": {
                                        "description": "Target amount for the worker",
                                        "type": "integer"
                                    },
                                    "parent_id": {
                                        "description": "Parent worker ID",
                                        "type": "integer"
                                    },
                                    "roles": {
                                        "description": "Array of roles ID",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "change_password": {
                                        "description": "Must be set to true if the password is changed.",
                                        "type": "boolean"
                                    },
                                    "affiliate_id": {
                                        "description": "Affiliate worker ID",
                                        "type": "integer"
                                    },
                                    "show_on_scoreboards": {
                                        "description": "Show on scoreboards",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/ban": {
            "patch": {
                "tags": [
                    "Worker"
                ],
                "summary": "Ban workers",
                "operationId": "b572b98a9b3cebdcc4224313a9cc9082",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "users"
                                ],
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Worker ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/unban": {
            "patch": {
                "tags": [
                    "Worker"
                ],
                "summary": "Unban workers",
                "operationId": "b9f6246813a23ac224d11adb3164484a",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "users"
                                ],
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Worker ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/workers/batch": {
            "patch": {
                "tags": [
                    "Worker"
                ],
                "summary": "Batch worker update",
                "operationId": "48faec29a28ad96a63087701cc1b49c1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "users"
                                ],
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "Worker ID",
                                                    "type": "integer"
                                                },
                                                "username": {
                                                    "description": "Worker username",
                                                    "type": "string"
                                                },
                                                "first_name": {
                                                    "description": "First name",
                                                    "type": "string"
                                                },
                                                "last_name": {
                                                    "description": "Last name",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "description": "Email",
                                                    "type": "string",
                                                    "format": "email"
                                                },
                                                "password": {
                                                    "description": "Password",
                                                    "type": "string",
                                                    "format": "password"
                                                },
                                                "password_confirmation": {
                                                    "description": "Password confirmation",
                                                    "type": "string",
                                                    "format": "password"
                                                },
                                                "is_active": {
                                                    "description": "Worker activity flag",
                                                    "type": "boolean"
                                                },
                                                "target": {
                                                    "description": "Target amount for the worker",
                                                    "type": "integer"
                                                },
                                                "parent_id": {
                                                    "description": "Parent worker ID",
                                                    "type": "integer"
                                                },
                                                "roles": {
                                                    "description": "Array of roles ID",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "change_password": {
                                                    "description": "Must be set to true if the password is changed.",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "403": {
                        "description": "Forbidden Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/token-auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Stateless api login",
                "operationId": "b40fd09c2695f363a2b940db1faaed2f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "description": "Username or Email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "remember_me": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "token",
                                        "expired_at"
                                    ],
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "expired_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2022-12-17 08:44:09"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/token-auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Steteless api logout",
                "operationId": "ef4e90a1af0c82dae472f057e366226e",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/token/create": {
            "post": {
                "tags": [
                    "Token"
                ],
                "summary": "Create new token",
                "operationId": "616eb681a84071fa303f4308e31b07c6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token_name"
                                ],
                                "properties": {
                                    "token_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "token"
                                    ],
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/admin/token/delete": {
            "delete": {
                "tags": [
                    "Token"
                ],
                "summary": "Delete token",
                "operationId": "e9ad65032766a13ba65cf0371a2adcf8",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "description": "Unauthorized Error"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "419": {
                        "description": "CSRF token mismatch"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Brand": {
                "title": "Brand",
                "description": "Brand model",
                "required": [
                    "id",
                    "name",
                    "title",
                    "slug",
                    "logo_url",
                    "is_active",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "properties": {
                    "id": {
                        "description": "Brand.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Brand name"
                    },
                    "title": {
                        "type": "string",
                        "example": "Brand title"
                    },
                    "slug": {
                        "type": "string",
                        "example": "brand-slug"
                    },
                    "logo_url": {
                        "type": "string",
                        "example": "/logo-url"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "workers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Worker"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Brand"
                }
            },
            "BrandCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Brand"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "BrandResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Brand"
                    }
                },
                "type": "object"
            },
            "CommunicationExtension": {
                "title": "CommunicationExtension",
                "description": "CommunicationExtension model",
                "required": [
                    "id",
                    "name",
                    "user_id",
                    "provider_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Any name"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "provider_id": {
                        "type": "integer"
                    },
                    "user": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Worker"
                        }
                    },
                    "provider": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommunicationProvider"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CommunicationExtension"
                }
            },
            "CommunicationExtensionCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommunicationExtension"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CommunicationExtensionResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CommunicationExtension"
                    }
                },
                "type": "object"
            },
            "CommunicationProvider": {
                "title": "CommunicationProvider",
                "description": "CommunicationProvider model",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Any name"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CommunicationProvider"
                }
            },
            "CommunicationProviderCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommunicationProvider"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CommunicationProviderResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/CommunicationProvider"
                    }
                },
                "type": "object"
            },
            "Config": {
                "title": "Config",
                "description": "Config model",
                "required": [
                    "id",
                    "config_type_id",
                    "data_type",
                    "name",
                    "value",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Config.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Setting"
                    },
                    "config_type_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "data_type": {
                        "type": "string",
                        "example": "json"
                    },
                    "value": {
                        "type": "string",
                        "example": "{}"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "configType": {
                        "$ref": "#/components/schemas/ConfigType"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Config"
                }
            },
            "ConfigCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Config"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "ConfigResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Config"
                    }
                },
                "type": "object"
            },
            "ConfigType": {
                "title": "ConfigType",
                "description": "Config type model",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "ConfigType.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Name"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "configs": {
                        "description": "Array of configs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigCollection"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ConfigType"
                }
            },
            "ConfigTypeCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigType"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "ConfigTypeResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ConfigType"
                    }
                },
                "type": "object"
            },
            "Customer": {
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "gender",
                    "email",
                    "phone",
                    "country_id",
                    "is_demo",
                    "is_active",
                    "is_active_trading",
                    "is_test",
                    "is_ftd",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Worker ID",
                        "type": "integer"
                    },
                    "first_name": {
                        "description": "First name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Last name",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "description": "Phone",
                        "type": "string",
                        "format": "phone"
                    },
                    "phone2": {
                        "description": "Second phone",
                        "type": "string",
                        "format": "phone",
                        "nullable": "true"
                    },
                    "birthday": {
                        "description": "Birthday",
                        "type": "string",
                        "nullable": "true"
                    },
                    "country_id": {
                        "description": "Country id",
                        "type": "integer"
                    },
                    "language_id": {
                        "description": "Language id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "supposed_language_id": {
                        "description": "Supposed language id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "platform_language_id": {
                        "description": "Platform language id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "state": {
                        "description": "State",
                        "type": "string",
                        "nullable": "true"
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "nullable": "true"
                    },
                    "address": {
                        "description": "Address",
                        "type": "string",
                        "nullable": "true"
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string",
                        "nullable": "true"
                    },
                    "verification_status_id": {
                        "description": "Verification status id",
                        "type": "string",
                        "nullable": "true"
                    },
                    "is_demo": {
                        "description": "Is demo",
                        "type": "boolean"
                    },
                    "is_active": {
                        "description": "Is active",
                        "type": "boolean"
                    },
                    "is_active_trading": {
                        "description": "Is active trading",
                        "type": "boolean"
                    },
                    "is_test": {
                        "description": "Is test",
                        "type": "boolean"
                    },
                    "affiliate_user_id": {
                        "description": "Affiliate user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "conversion_user_id": {
                        "description": "Conversion user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "retention_user_id": {
                        "description": "Retention user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "compliance_user_id": {
                        "description": "Compliance user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "support_user_id": {
                        "description": "Support user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "conversion_manager_user_id": {
                        "description": "Conversion manager user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "retention_manager_user_id": {
                        "description": "Retention manager user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "first_conversion_user_id": {
                        "description": "First conversion user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "first_retention_user_id": {
                        "description": "First retention user id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "desk_id": {
                        "description": "Desk id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "department_id": {
                        "description": "Department id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "last_online": {
                        "description": "Last online",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "first_autologin_time": {
                        "description": "First auto login time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "first_login_time": {
                        "description": "First login time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "first_deposit_date": {
                        "description": "First deposit date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "last_approved_deposit_date": {
                        "description": "last approved deposit date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "last_pending_deposit_date": {
                        "description": "last pending deposit date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "last_pending_withdrawal_date": {
                        "description": "last pending withdrawal date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "last_communication_date": {
                        "description": "last communication date",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "banned_at": {
                        "description": "Banned at",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": "true"
                    },
                    "campaign_id": {
                        "description": "Campaign id",
                        "type": "integer",
                        "nullable": "true"
                    },
                    "offer_name": {
                        "description": "Offer name",
                        "type": "string",
                        "nullable": "true"
                    },
                    "offer_url": {
                        "description": "Offer url",
                        "type": "string",
                        "nullable": "true"
                    },
                    "comment_about_customer": {
                        "description": "Comment about customer",
                        "type": "string",
                        "nullable": "true"
                    },
                    "source": {
                        "description": "Source",
                        "type": "string",
                        "nullable": "true"
                    },
                    "click_id": {
                        "description": "Click id",
                        "type": "string",
                        "nullable": "true"
                    },
                    "free_param_1": {
                        "description": "Free param 1",
                        "type": "string",
                        "nullable": "true"
                    },
                    "free_param_2": {
                        "description": "Free param 2",
                        "type": "string",
                        "nullable": "true"
                    },
                    "free_param_3": {
                        "description": "Free param 3",
                        "type": "string",
                        "nullable": "true"
                    },
                    "balance": {
                        "description": "Balance",
                        "type": "number",
                        "format": "float",
                        "nullable": "true"
                    },
                    "balance_usd": {
                        "description": "Balance USD",
                        "type": "number",
                        "format": "float",
                        "nullable": "true"
                    },
                    "is_ftd": {
                        "description": "Is FTD",
                        "type": "boolean",
                        "nullable": "true"
                    },
                    "timezone": {
                        "description": "Timezone",
                        "type": "string",
                        "nullable": "true"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "deleted_at": {
                        "description": "Date and time of soft delete",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CustomerCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Customer"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CustomerResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Customer"
                    }
                },
                "type": "object"
            },
            "Department": {
                "title": "Department",
                "description": "Department model",
                "required": [
                    "id",
                    "name",
                    "title",
                    "is_active",
                    "is_default",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "properties": {
                    "id": {
                        "description": "Department.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Name"
                    },
                    "title": {
                        "type": "string",
                        "example": "Title"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": 1
                    },
                    "is_default": {
                        "type": "boolean",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Department"
                }
            },
            "DepartmentCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Department"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "DepartmentResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Department"
                    }
                },
                "type": "object"
            },
            "Country": {
                "title": "Country",
                "description": "Country model",
                "required": [
                    "id",
                    "name",
                    "iso2",
                    "iso3",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "properties": {
                    "id": {
                        "description": "Country.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Russia"
                    },
                    "iso2": {
                        "type": "string",
                        "example": "RU"
                    },
                    "iso3": {
                        "type": "string",
                        "example": "RUS"
                    },
                    "currency": {
                        "type": "string",
                        "example": "RUB"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Country"
                }
            },
            "CountryCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Country"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "CountryResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Country"
                    }
                },
                "type": "object"
            },
            "Language": {
                "title": "Language",
                "description": "Language model",
                "required": [
                    "id",
                    "name",
                    "iso2",
                    "iso3",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "properties": {
                    "id": {
                        "description": "Language.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Russian"
                    },
                    "code": {
                        "type": "string",
                        "example": "rus"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Language"
                }
            },
            "LanguageCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Language"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "LanguageResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Language"
                    }
                },
                "type": "object"
            },
            "Column": {
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "description": "Column ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Column name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ColumnCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Column"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "ColumnResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Column"
                    }
                },
                "type": "object"
            },
            "Permission": {
                "required": [
                    "id",
                    "name",
                    "guard_name",
                    "model_id",
                    "action_id",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Role ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "User",
                        "type": "string"
                    },
                    "guard_name": {
                        "description": "api",
                        "type": "string"
                    },
                    "action_id": {
                        "description": "Action ID",
                        "type": "integer"
                    },
                    "model_id": {
                        "description": "Model ID",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01 00:00:00"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01 00:00:00"
                    }
                },
                "type": "object"
            },
            "PermissionCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "PermissionResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Permission"
                    }
                },
                "type": "object"
            },
            "Role": {
                "required": [
                    "id",
                    "name",
                    "guard_name",
                    "key",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Role ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "User",
                        "type": "string"
                    },
                    "guard_name": {
                        "description": "api",
                        "type": "string"
                    },
                    "key": {
                        "description": "key",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01 00:00:00"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "1970-01-01 00:00:00"
                    },
                    "permissions": {
                        "description": "Permission array",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    }
                },
                "type": "object"
            },
            "RoleCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "RoleResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Role"
                    }
                },
                "type": "object"
            },
            "SaleStatus": {
                "title": "SaleStatus",
                "description": "SaleStatus model",
                "required": [
                    "name",
                    "title",
                    "color"
                ],
                "properties": {
                    "id": {
                        "description": "SaleStatus.",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Any name"
                    },
                    "title": {
                        "type": "string",
                        "example": "Any title"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": "1"
                    },
                    "color": {
                        "type": "string",
                        "example": "#e1e1e1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "SaleStatus"
                }
            },
            "SaleStatusCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SaleStatus"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "SaleStatusResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/SaleStatus"
                    }
                },
                "type": "object"
            },
            "AuthUser": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "role": {
                        "$ref": "#/components/schemas/Role"
                    }
                },
                "type": "object"
            },
            "AuthUserCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuthUser"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "AuthUserResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AuthUser"
                    }
                },
                "type": "object"
            },
            "DisplayOption": {
                "required": [
                    "id",
                    "user_id",
                    "name",
                    "columns"
                ],
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "model_id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Worker"
                        }
                    },
                    "model": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DisplayOptionCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DisplayOption"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "DisplayOptionResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/DisplayOption"
                    }
                },
                "type": "object"
            },
            "Worker": {
                "required": [
                    "id",
                    "username",
                    "first_name",
                    "last_name",
                    "is_active",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Worker ID",
                        "type": "integer"
                    },
                    "username": {
                        "description": "Worker username",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "First name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Last name",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "is_active": {
                        "description": "Worker activity flag",
                        "type": "boolean"
                    },
                    "target": {
                        "description": "Target amount for the worker",
                        "type": "integer",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Date and time of creation",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "updated_at": {
                        "description": "Date and time of last update",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09"
                    },
                    "deleted_at": {
                        "description": "Date and time of soft delete",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    },
                    "last_login": {
                        "description": "Date and time of last login",
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-12-17 08:44:09",
                        "nullable": true
                    },
                    "permissions": {
                        "description": "Permission array",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "roles": {
                        "description": "Array of roles",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "affiliate_id": {
                        "description": "Affiliate worker ID",
                        "type": "integer"
                    },
                    "show_on_scoreboards": {
                        "description": "Show on scoreboards",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "WorkerCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Worker"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "WorkerResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Worker"
                    }
                },
                "type": "object"
            },
            "Meta": {
                "properties": {
                    "pagination": {
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "count": {
                                "type": "integer"
                            },
                            "per_page": {
                                "type": "integer"
                            },
                            "current_page": {
                                "type": "integer"
                            },
                            "total_pages": {
                                "type": "integer"
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Error description"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token stateless authentication",
                "scheme": "bearer"
            },
            "sanctum_frontend": {
                "type": "apiKey",
                "in": "cookie",
                "name": "laravel_session",
                "description": "Laravel Sanctum stateful authentication"
            },
            "oauth2_google": {
                "type": "oauth2",
                "description": "Google OAuth2 stateful authentication",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "/admin/auth/login/google?redirect_url=http%3A%2F%2Flocalhost&remember_me=1"
                    }
                }
            }
        }
    }
}
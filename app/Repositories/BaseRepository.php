<?php

namespace App\Repositories;

use Illuminate\Database\Eloquent\Builder;
use Spatie\QueryBuilder\QueryBuilder;

/**
 * Class BaseRepository
 * @method jsonPaginate(int $maxResults = null, int $defaultSize = null)
 */
abstract class BaseRepository extends \Prettus\Repository\Eloquent\BaseRepository
{
    public function all($columns = ['*'])
    {
        $this->applyCriteria();
        $this->applyScope();

        if ($this->model instanceof Builder) {
            $results = $this->model->get($columns);
        }
        elseif ($this->model instanceof QueryBuilder) {
            $results = $this->model->get($columns);
        }
        else {
            $results = $this->model->all($columns);
        }

        $this->resetModel();
        $this->resetScope();

        return $this->parserResult($results);
    }

    public function findWhere(array $where, $columns = ['*'])
    {
        return parent::findWhere($where, $columns); // TODO: Change the autogenerated stub
    }

    public function paginate($limit = null, $page = null, $columns = ['*'], $method = "paginate")
    {
        $this->applyCriteria();
        $this->applyScope();
        $limit = is_null($limit) ? config('repository.pagination.limit', 15) : $limit;
        $results = $this->model->{$method}($limit, $columns, 'page', $page);
        $results->appends(app('request')->query());
        $this->resetModel();

        return $this->parserResult($results);
    }
}
